//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_aspnet_UsersCompany", "Company", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrentwoodPrinting.Data.Company), "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.aspnet_Users), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_Jobaspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.aspnet_Users), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.Job), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_UserMessageaspnet_UsersFrom", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.aspnet_Users), "UserMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.UserMessage), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_UserMessageaspnet_UsersTo", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.aspnet_Users), "UserMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.UserMessage), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobAssetJob", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.Job), "JobAsset", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobAsset), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobInfoJob", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.Job), "JobInfo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobInfo), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobJobType", "JobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.JobType), "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.Job), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobProofJob", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.Job), "JobProof", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobProof), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_MessageJob", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.Job), "UserMessage", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.UserMessage), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobControlJob", "JobType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.JobType), "JobControl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobControl), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobControlJobControlType", "JobControlType", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.JobControlType), "JobControl", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobControl), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "EmployeeRoleaspnet_Users", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.aspnet_Users), "EmployeeRole", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.EmployeeRole))]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobStatus_EmployeeRole", "EmployeeRole", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(BrentwoodPrinting.Data.EmployeeRole), "JobStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobStatus), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusUserId", "aspnet_Users", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.aspnet_Users), "JobJobStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobJobStatus), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusJobID", "Job", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.Job), "JobJobStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobJobStatus), true)]
[assembly: EdmRelationshipAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusJobStatusID", "JobStatus", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(BrentwoodPrinting.Data.JobStatus), "JobJobStatu", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(BrentwoodPrinting.Data.JobJobStatus), true)]

#endregion

namespace BrentwoodPrinting.Data
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Entities object using the connection string found in the 'Entities' section of the application configuration file.
        /// </summary>
        public Entities() : base("name=Entities", "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(string connectionString) : base(connectionString, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Entities object.
        /// </summary>
        public Entities(EntityConnection connection) : base(connection, "Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<aspnet_Users> aspnet_Users
        {
            get
            {
                if ((_aspnet_Users == null))
                {
                    _aspnet_Users = base.CreateObjectSet<aspnet_Users>("aspnet_Users");
                }
                return _aspnet_Users;
            }
        }
        private ObjectSet<aspnet_Users> _aspnet_Users;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Company> Companies
        {
            get
            {
                if ((_Companies == null))
                {
                    _Companies = base.CreateObjectSet<Company>("Companies");
                }
                return _Companies;
            }
        }
        private ObjectSet<Company> _Companies;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<EmployeeRole> EmployeeRoles
        {
            get
            {
                if ((_EmployeeRoles == null))
                {
                    _EmployeeRoles = base.CreateObjectSet<EmployeeRole>("EmployeeRoles");
                }
                return _EmployeeRoles;
            }
        }
        private ObjectSet<EmployeeRole> _EmployeeRoles;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Job> Jobs
        {
            get
            {
                if ((_Jobs == null))
                {
                    _Jobs = base.CreateObjectSet<Job>("Jobs");
                }
                return _Jobs;
            }
        }
        private ObjectSet<Job> _Jobs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobAsset> JobAssets
        {
            get
            {
                if ((_JobAssets == null))
                {
                    _JobAssets = base.CreateObjectSet<JobAsset>("JobAssets");
                }
                return _JobAssets;
            }
        }
        private ObjectSet<JobAsset> _JobAssets;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobControl> JobControls
        {
            get
            {
                if ((_JobControls == null))
                {
                    _JobControls = base.CreateObjectSet<JobControl>("JobControls");
                }
                return _JobControls;
            }
        }
        private ObjectSet<JobControl> _JobControls;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobControlType> JobControlTypes
        {
            get
            {
                if ((_JobControlTypes == null))
                {
                    _JobControlTypes = base.CreateObjectSet<JobControlType>("JobControlTypes");
                }
                return _JobControlTypes;
            }
        }
        private ObjectSet<JobControlType> _JobControlTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobInfo> JobInfoes
        {
            get
            {
                if ((_JobInfoes == null))
                {
                    _JobInfoes = base.CreateObjectSet<JobInfo>("JobInfoes");
                }
                return _JobInfoes;
            }
        }
        private ObjectSet<JobInfo> _JobInfoes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobProof> JobProofs
        {
            get
            {
                if ((_JobProofs == null))
                {
                    _JobProofs = base.CreateObjectSet<JobProof>("JobProofs");
                }
                return _JobProofs;
            }
        }
        private ObjectSet<JobProof> _JobProofs;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobStatus> JobStatus1
        {
            get
            {
                if ((_JobStatus1 == null))
                {
                    _JobStatus1 = base.CreateObjectSet<JobStatus>("JobStatus1");
                }
                return _JobStatus1;
            }
        }
        private ObjectSet<JobStatus> _JobStatus1;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobType> JobTypes
        {
            get
            {
                if ((_JobTypes == null))
                {
                    _JobTypes = base.CreateObjectSet<JobType>("JobTypes");
                }
                return _JobTypes;
            }
        }
        private ObjectSet<JobType> _JobTypes;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<UserMessage> UserMessages
        {
            get
            {
                if ((_UserMessages == null))
                {
                    _UserMessages = base.CreateObjectSet<UserMessage>("UserMessages");
                }
                return _UserMessages;
            }
        }
        private ObjectSet<UserMessage> _UserMessages;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<JobJobStatus> JobJobStatus1
        {
            get
            {
                if ((_JobJobStatus1 == null))
                {
                    _JobJobStatus1 = base.CreateObjectSet<JobJobStatus>("JobJobStatus1");
                }
                return _JobJobStatus1;
            }
        }
        private ObjectSet<JobJobStatus> _JobJobStatus1;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the aspnet_Users EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToaspnet_Users(aspnet_Users aspnet_Users)
        {
            base.AddObject("aspnet_Users", aspnet_Users);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Companies EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompanies(Company company)
        {
            base.AddObject("Companies", company);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EmployeeRoles EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEmployeeRoles(EmployeeRole employeeRole)
        {
            base.AddObject("EmployeeRoles", employeeRole);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Jobs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobs(Job job)
        {
            base.AddObject("Jobs", job);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobAssets EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobAssets(JobAsset jobAsset)
        {
            base.AddObject("JobAssets", jobAsset);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobControls EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobControls(JobControl jobControl)
        {
            base.AddObject("JobControls", jobControl);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobControlTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobControlTypes(JobControlType jobControlType)
        {
            base.AddObject("JobControlTypes", jobControlType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobInfoes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobInfoes(JobInfo jobInfo)
        {
            base.AddObject("JobInfoes", jobInfo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobProofs EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobProofs(JobProof jobProof)
        {
            base.AddObject("JobProofs", jobProof);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobStatus1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobStatus1(JobStatus jobStatus)
        {
            base.AddObject("JobStatus1", jobStatus);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobTypes EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobTypes(JobType jobType)
        {
            base.AddObject("JobTypes", jobType);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the UserMessages EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToUserMessages(UserMessage userMessage)
        {
            base.AddObject("UserMessages", userMessage);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the JobJobStatus1 EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToJobJobStatus1(JobJobStatus jobJobStatus)
        {
            base.AddObject("JobJobStatus1", jobJobStatus);
        }

        #endregion

        #region Function Imports
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobstatusid">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        public ObjectResult<JobsByJobStatusIDCustomerID_Result> ListJobsByJobStatusIDCustomerID(Nullable<global::System.Int32> jobstatusid, Nullable<global::System.Guid> userid)
        {
            ObjectParameter jobstatusidParameter;
            if (jobstatusid.HasValue)
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", jobstatusid);
            }
            else
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", typeof(global::System.Int32));
            }
    
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<JobsByJobStatusIDCustomerID_Result>("ListJobsByJobStatusIDCustomerID", jobstatusidParameter, useridParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobstatusid">No Metadata Documentation available.</param>
        public ObjectResult<JobsByJobStatusID_Result> ListJobsByJobStatusID(Nullable<global::System.Int32> jobstatusid)
        {
            ObjectParameter jobstatusidParameter;
            if (jobstatusid.HasValue)
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", jobstatusid);
            }
            else
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobsByJobStatusID_Result>("ListJobsByJobStatusID", jobstatusidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobstatusid">No Metadata Documentation available.</param>
        public ObjectResult<CustomersByJobStatusID_Result> ListCustomersByJobStatusID(Nullable<global::System.Int32> jobstatusid)
        {
            ObjectParameter jobstatusidParameter;
            if (jobstatusid.HasValue)
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", jobstatusid);
            }
            else
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<CustomersByJobStatusID_Result>("ListCustomersByJobStatusID", jobstatusidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="estimatedTimeToComplete">No Metadata Documentation available.</param>
        /// <param name="jobTypeDescription">No Metadata Documentation available.</param>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> JobType_Update(global::System.String name, global::System.String estimatedTimeToComplete, global::System.String jobTypeDescription, Nullable<global::System.Int32> jobTypeID)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter estimatedTimeToCompleteParameter;
            if (estimatedTimeToComplete != null)
            {
                estimatedTimeToCompleteParameter = new ObjectParameter("EstimatedTimeToComplete", estimatedTimeToComplete);
            }
            else
            {
                estimatedTimeToCompleteParameter = new ObjectParameter("EstimatedTimeToComplete", typeof(global::System.String));
            }
    
            ObjectParameter jobTypeDescriptionParameter;
            if (jobTypeDescription != null)
            {
                jobTypeDescriptionParameter = new ObjectParameter("JobTypeDescription", jobTypeDescription);
            }
            else
            {
                jobTypeDescriptionParameter = new ObjectParameter("JobTypeDescription", typeof(global::System.String));
            }
    
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobType_Update", nameParameter, estimatedTimeToCompleteParameter, jobTypeDescriptionParameter, jobTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public int JobType_UnArchive(Nullable<global::System.Int32> jobTypeID)
        {
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobType_UnArchive", jobTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<JobType> JobType_ListArchived()
        {
            return base.ExecuteFunction<JobType>("JobType_ListArchived");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<JobType> JobType_ListArchived(MergeOption mergeOption)
        {
            return base.ExecuteFunction<JobType>("JobType_ListArchived", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<JobType> JobType_List()
        {
            return base.ExecuteFunction<JobType>("JobType_List");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<JobType> JobType_List(MergeOption mergeOption)
        {
            return base.ExecuteFunction<JobType>("JobType_List", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="estimatedTimeToComplete">No Metadata Documentation available.</param>
        /// <param name="jobTypeDescription">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> JobType_Insert(global::System.String name, global::System.String estimatedTimeToComplete, global::System.String jobTypeDescription)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter estimatedTimeToCompleteParameter;
            if (estimatedTimeToComplete != null)
            {
                estimatedTimeToCompleteParameter = new ObjectParameter("EstimatedTimeToComplete", estimatedTimeToComplete);
            }
            else
            {
                estimatedTimeToCompleteParameter = new ObjectParameter("EstimatedTimeToComplete", typeof(global::System.String));
            }
    
            ObjectParameter jobTypeDescriptionParameter;
            if (jobTypeDescription != null)
            {
                jobTypeDescriptionParameter = new ObjectParameter("JobTypeDescription", jobTypeDescription);
            }
            else
            {
                jobTypeDescriptionParameter = new ObjectParameter("JobTypeDescription", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobType_Insert", nameParameter, estimatedTimeToCompleteParameter, jobTypeDescriptionParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobType> JobType_GetByJob(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobType>("JobType_GetByJob", jobIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobType> JobType_GetByJob(Nullable<global::System.Int32> jobID, MergeOption mergeOption)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobType>("JobType_GetByJob", mergeOption, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public ObjectResult<JobType> JobType_Get(Nullable<global::System.Int32> jobTypeID)
        {
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobType>("JobType_Get", jobTypeIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public ObjectResult<JobType> JobType_Get(Nullable<global::System.Int32> jobTypeID, MergeOption mergeOption)
        {
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobType>("JobType_Get", mergeOption, jobTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public int JobType_Archive(Nullable<global::System.Int32> jobTypeID)
        {
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobType_Archive", jobTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        public int JobStatus_Update(Nullable<global::System.Int32> jobStatusID, global::System.String name)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("JobStatus_Update", jobStatusIDParameter, nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        public int JobStatus_UnArchive(Nullable<global::System.Int32> jobStatusID)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobStatus_UnArchive", jobStatusIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        public int JobStatus_Archive(Nullable<global::System.Int32> jobStatusID)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobStatus_Archive", jobStatusIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobid">No Metadata Documentation available.</param>
        public ObjectResult<JobProof> JobProof_ListByJobID(Nullable<global::System.Int32> jobid)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobProof>("JobProof_ListByJobID", jobidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobid">No Metadata Documentation available.</param>
        public ObjectResult<JobProof> JobProof_ListByJobID(Nullable<global::System.Int32> jobid, MergeOption mergeOption)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobProof>("JobProof_ListByJobID", mergeOption, jobidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobid">No Metadata Documentation available.</param>
        /// <param name="filepath">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> JobProof_Insert(Nullable<global::System.Int32> jobid, global::System.String filepath)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            ObjectParameter filepathParameter;
            if (filepath != null)
            {
                filepathParameter = new ObjectParameter("filepath", filepath);
            }
            else
            {
                filepathParameter = new ObjectParameter("filepath", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobProof_Insert", jobidParameter, filepathParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobid">No Metadata Documentation available.</param>
        /// <param name="userid">No Metadata Documentation available.</param>
        /// <param name="jobstatusid">No Metadata Documentation available.</param>
        public int JobJobStatus_Update(Nullable<global::System.Int32> jobid, Nullable<global::System.Guid> userid, Nullable<global::System.Int32> jobstatusid)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Guid));
            }
    
            ObjectParameter jobstatusidParameter;
            if (jobstatusid.HasValue)
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", jobstatusid);
            }
            else
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobJobStatus_Update", jobidParameter, useridParameter, jobstatusidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobInfoID">No Metadata Documentation available.</param>
        /// <param name="nameKey">No Metadata Documentation available.</param>
        /// <param name="dataValue">No Metadata Documentation available.</param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public int JobInfo_Update(Nullable<global::System.Int32> jobInfoID, global::System.String nameKey, global::System.String dataValue, Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobInfoIDParameter;
            if (jobInfoID.HasValue)
            {
                jobInfoIDParameter = new ObjectParameter("JobInfoID", jobInfoID);
            }
            else
            {
                jobInfoIDParameter = new ObjectParameter("JobInfoID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameKeyParameter;
            if (nameKey != null)
            {
                nameKeyParameter = new ObjectParameter("NameKey", nameKey);
            }
            else
            {
                nameKeyParameter = new ObjectParameter("NameKey", typeof(global::System.String));
            }
    
            ObjectParameter dataValueParameter;
            if (dataValue != null)
            {
                dataValueParameter = new ObjectParameter("DataValue", dataValue);
            }
            else
            {
                dataValueParameter = new ObjectParameter("DataValue", typeof(global::System.String));
            }
    
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobInfo_Update", jobInfoIDParameter, nameKeyParameter, dataValueParameter, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="nameKey">No Metadata Documentation available.</param>
        /// <param name="dataValue">No Metadata Documentation available.</param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public int JobInfo_Insert(global::System.String nameKey, global::System.String dataValue, Nullable<global::System.Int32> jobID)
        {
            ObjectParameter nameKeyParameter;
            if (nameKey != null)
            {
                nameKeyParameter = new ObjectParameter("NameKey", nameKey);
            }
            else
            {
                nameKeyParameter = new ObjectParameter("NameKey", typeof(global::System.String));
            }
    
            ObjectParameter dataValueParameter;
            if (dataValue != null)
            {
                dataValueParameter = new ObjectParameter("DataValue", dataValue);
            }
            else
            {
                dataValueParameter = new ObjectParameter("DataValue", typeof(global::System.String));
            }
    
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobInfo_Insert", nameKeyParameter, dataValueParameter, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="controlName">No Metadata Documentation available.</param>
        /// <param name="jobControlTypeID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> JobControlType_Update(global::System.String controlName, Nullable<global::System.Int32> jobControlTypeID)
        {
            ObjectParameter controlNameParameter;
            if (controlName != null)
            {
                controlNameParameter = new ObjectParameter("ControlName", controlName);
            }
            else
            {
                controlNameParameter = new ObjectParameter("ControlName", typeof(global::System.String));
            }
    
            ObjectParameter jobControlTypeIDParameter;
            if (jobControlTypeID.HasValue)
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", jobControlTypeID);
            }
            else
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobControlType_Update", controlNameParameter, jobControlTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<JobControlType> JobControlType_List()
        {
            return base.ExecuteFunction<JobControlType>("JobControlType_List");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<JobControlType> JobControlType_List(MergeOption mergeOption)
        {
            return base.ExecuteFunction<JobControlType>("JobControlType_List", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="controlName">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> JobControlType_Insert(global::System.String controlName)
        {
            ObjectParameter controlNameParameter;
            if (controlName != null)
            {
                controlNameParameter = new ObjectParameter("ControlName", controlName);
            }
            else
            {
                controlNameParameter = new ObjectParameter("ControlName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobControlType_Insert", controlNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobControlID">No Metadata Documentation available.</param>
        public ObjectResult<JobControlType> JobControlType_GetControlTypeByControlID(Nullable<global::System.Int32> jobControlID)
        {
            ObjectParameter jobControlIDParameter;
            if (jobControlID.HasValue)
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", jobControlID);
            }
            else
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobControlType>("JobControlType_GetControlTypeByControlID", jobControlIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobControlID">No Metadata Documentation available.</param>
        public ObjectResult<JobControlType> JobControlType_GetControlTypeByControlID(Nullable<global::System.Int32> jobControlID, MergeOption mergeOption)
        {
            ObjectParameter jobControlIDParameter;
            if (jobControlID.HasValue)
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", jobControlID);
            }
            else
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobControlType>("JobControlType_GetControlTypeByControlID", mergeOption, jobControlIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<JobControlType> JobControlType_GetByName(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<JobControlType>("JobControlType_GetByName", nameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<JobControlType> JobControlType_GetByName(global::System.String name, MergeOption mergeOption)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<JobControlType>("JobControlType_GetByName", mergeOption, nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobControlTypeID">No Metadata Documentation available.</param>
        public ObjectResult<JobControlType> JobControlType_Get(Nullable<global::System.Int32> jobControlTypeID)
        {
            ObjectParameter jobControlTypeIDParameter;
            if (jobControlTypeID.HasValue)
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", jobControlTypeID);
            }
            else
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobControlType>("JobControlType_Get", jobControlTypeIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobControlTypeID">No Metadata Documentation available.</param>
        public ObjectResult<JobControlType> JobControlType_Get(Nullable<global::System.Int32> jobControlTypeID, MergeOption mergeOption)
        {
            ObjectParameter jobControlTypeIDParameter;
            if (jobControlTypeID.HasValue)
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", jobControlTypeID);
            }
            else
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobControlType>("JobControlType_Get", mergeOption, jobControlTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobControlTypeID">No Metadata Documentation available.</param>
        public int JobControlType_Delete(Nullable<global::System.Int32> jobControlTypeID)
        {
            ObjectParameter jobControlTypeIDParameter;
            if (jobControlTypeID.HasValue)
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", jobControlTypeID);
            }
            else
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobControlType_Delete", jobControlTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobControlID">No Metadata Documentation available.</param>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public int JobContol_AddControlToJobType(Nullable<global::System.Int32> jobControlID, Nullable<global::System.Int32> jobTypeID)
        {
            ObjectParameter jobControlIDParameter;
            if (jobControlID.HasValue)
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", jobControlID);
            }
            else
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", typeof(global::System.Int32));
            }
    
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobContol_AddControlToJobType", jobControlIDParameter, jobTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobAssetID">No Metadata Documentation available.</param>
        /// <param name="filepath">No Metadata Documentation available.</param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public int JobAsset_Update(Nullable<global::System.Int32> jobAssetID, global::System.String filepath, Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobAssetIDParameter;
            if (jobAssetID.HasValue)
            {
                jobAssetIDParameter = new ObjectParameter("JobAssetID", jobAssetID);
            }
            else
            {
                jobAssetIDParameter = new ObjectParameter("JobAssetID", typeof(global::System.Int32));
            }
    
            ObjectParameter filepathParameter;
            if (filepath != null)
            {
                filepathParameter = new ObjectParameter("Filepath", filepath);
            }
            else
            {
                filepathParameter = new ObjectParameter("Filepath", typeof(global::System.String));
            }
    
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobAsset_Update", jobAssetIDParameter, filepathParameter, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobid">No Metadata Documentation available.</param>
        public ObjectResult<JobAsset> JobAsset_ListByJobID(Nullable<global::System.Int32> jobid)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobAsset>("JobAsset_ListByJobID", jobidParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobid">No Metadata Documentation available.</param>
        public ObjectResult<JobAsset> JobAsset_ListByJobID(Nullable<global::System.Int32> jobid, MergeOption mergeOption)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobAsset>("JobAsset_ListByJobID", mergeOption, jobidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobAsset> JobAsset_ListByJob(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobAsset>("JobAsset_ListByJob", jobIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobAsset> JobAsset_ListByJob(Nullable<global::System.Int32> jobID, MergeOption mergeOption)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobAsset>("JobAsset_ListByJob", mergeOption, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<JobAsset> JobAsset_List()
        {
            return base.ExecuteFunction<JobAsset>("JobAsset_List");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<JobAsset> JobAsset_List(MergeOption mergeOption)
        {
            return base.ExecuteFunction<JobAsset>("JobAsset_List", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="filepath">No Metadata Documentation available.</param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public int JobAsset_Insert(global::System.String filepath, Nullable<global::System.Int32> jobID)
        {
            ObjectParameter filepathParameter;
            if (filepath != null)
            {
                filepathParameter = new ObjectParameter("Filepath", filepath);
            }
            else
            {
                filepathParameter = new ObjectParameter("Filepath", typeof(global::System.String));
            }
    
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobAsset_Insert", filepathParameter, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobAssetID">No Metadata Documentation available.</param>
        public ObjectResult<JobAsset> JobAsset_Get(Nullable<global::System.Int32> jobAssetID)
        {
            ObjectParameter jobAssetIDParameter;
            if (jobAssetID.HasValue)
            {
                jobAssetIDParameter = new ObjectParameter("JobAssetID", jobAssetID);
            }
            else
            {
                jobAssetIDParameter = new ObjectParameter("JobAssetID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobAsset>("JobAsset_Get", jobAssetIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobAssetID">No Metadata Documentation available.</param>
        public ObjectResult<JobAsset> JobAsset_Get(Nullable<global::System.Int32> jobAssetID, MergeOption mergeOption)
        {
            ObjectParameter jobAssetIDParameter;
            if (jobAssetID.HasValue)
            {
                jobAssetIDParameter = new ObjectParameter("JobAssetID", jobAssetID);
            }
            else
            {
                jobAssetIDParameter = new ObjectParameter("JobAssetID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobAsset>("JobAsset_Get", mergeOption, jobAssetIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<EmployeeRole> EmployeeRole_List()
        {
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_List");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<EmployeeRole> EmployeeRole_List(MergeOption mergeOption)
        {
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_List", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="employeeID">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> EmployeeRole_GetByEmployee(Nullable<global::System.Guid> employeeID)
        {
            ObjectParameter employeeIDParameter;
            if (employeeID.HasValue)
            {
                employeeIDParameter = new ObjectParameter("EmployeeID", employeeID);
            }
            else
            {
                employeeIDParameter = new ObjectParameter("EmployeeID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<global::System.String>("EmployeeRole_GetByEmployee", employeeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="companyAddress">No Metadata Documentation available.</param>
        /// <param name="city">No Metadata Documentation available.</param>
        /// <param name="province">No Metadata Documentation available.</param>
        /// <param name="postalCode">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        /// <param name="website">No Metadata Documentation available.</param>
        /// <param name="flagged">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Company_Update(Nullable<global::System.Int32> companyID, global::System.String name, global::System.String companyAddress, global::System.String city, global::System.String province, global::System.String postalCode, global::System.String phoneNumber, global::System.String website, Nullable<global::System.Boolean> flagged)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter companyAddressParameter;
            if (companyAddress != null)
            {
                companyAddressParameter = new ObjectParameter("CompanyAddress", companyAddress);
            }
            else
            {
                companyAddressParameter = new ObjectParameter("CompanyAddress", typeof(global::System.String));
            }
    
            ObjectParameter cityParameter;
            if (city != null)
            {
                cityParameter = new ObjectParameter("City", city);
            }
            else
            {
                cityParameter = new ObjectParameter("City", typeof(global::System.String));
            }
    
            ObjectParameter provinceParameter;
            if (province != null)
            {
                provinceParameter = new ObjectParameter("Province", province);
            }
            else
            {
                provinceParameter = new ObjectParameter("Province", typeof(global::System.String));
            }
    
            ObjectParameter postalCodeParameter;
            if (postalCode != null)
            {
                postalCodeParameter = new ObjectParameter("PostalCode", postalCode);
            }
            else
            {
                postalCodeParameter = new ObjectParameter("PostalCode", typeof(global::System.String));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber != null)
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", typeof(global::System.String));
            }
    
            ObjectParameter websiteParameter;
            if (website != null)
            {
                websiteParameter = new ObjectParameter("Website", website);
            }
            else
            {
                websiteParameter = new ObjectParameter("Website", typeof(global::System.String));
            }
    
            ObjectParameter flaggedParameter;
            if (flagged.HasValue)
            {
                flaggedParameter = new ObjectParameter("Flagged", flagged);
            }
            else
            {
                flaggedParameter = new ObjectParameter("Flagged", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Company_Update", companyIDParameter, nameParameter, companyAddressParameter, cityParameter, provinceParameter, postalCodeParameter, phoneNumberParameter, websiteParameter, flaggedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Company> Company_List()
        {
            return base.ExecuteFunction<Company>("Company_List");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Company> Company_List(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Company>("Company_List", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="companyAddress">No Metadata Documentation available.</param>
        /// <param name="city">No Metadata Documentation available.</param>
        /// <param name="province">No Metadata Documentation available.</param>
        /// <param name="postalCode">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        /// <param name="website">No Metadata Documentation available.</param>
        /// <param name="flagged">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Company_Insert(global::System.String name, global::System.String companyAddress, global::System.String city, global::System.String province, global::System.String postalCode, global::System.String phoneNumber, global::System.String website, Nullable<global::System.Boolean> flagged)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter companyAddressParameter;
            if (companyAddress != null)
            {
                companyAddressParameter = new ObjectParameter("CompanyAddress", companyAddress);
            }
            else
            {
                companyAddressParameter = new ObjectParameter("CompanyAddress", typeof(global::System.String));
            }
    
            ObjectParameter cityParameter;
            if (city != null)
            {
                cityParameter = new ObjectParameter("City", city);
            }
            else
            {
                cityParameter = new ObjectParameter("City", typeof(global::System.String));
            }
    
            ObjectParameter provinceParameter;
            if (province != null)
            {
                provinceParameter = new ObjectParameter("Province", province);
            }
            else
            {
                provinceParameter = new ObjectParameter("Province", typeof(global::System.String));
            }
    
            ObjectParameter postalCodeParameter;
            if (postalCode != null)
            {
                postalCodeParameter = new ObjectParameter("PostalCode", postalCode);
            }
            else
            {
                postalCodeParameter = new ObjectParameter("PostalCode", typeof(global::System.String));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber != null)
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", typeof(global::System.String));
            }
    
            ObjectParameter websiteParameter;
            if (website != null)
            {
                websiteParameter = new ObjectParameter("Website", website);
            }
            else
            {
                websiteParameter = new ObjectParameter("Website", typeof(global::System.String));
            }
    
            ObjectParameter flaggedParameter;
            if (flagged.HasValue)
            {
                flaggedParameter = new ObjectParameter("Flagged", flagged);
            }
            else
            {
                flaggedParameter = new ObjectParameter("Flagged", typeof(global::System.Boolean));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Company_Insert", nameParameter, companyAddressParameter, cityParameter, provinceParameter, postalCodeParameter, phoneNumberParameter, websiteParameter, flaggedParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        public ObjectResult<Company> Company_GetByUserId(Nullable<global::System.Guid> userId)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Company>("Company_GetByUserId", userIdParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public ObjectResult<Company> Company_GetByUserId(Nullable<global::System.Guid> userId, MergeOption mergeOption)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Company>("Company_GetByUserId", mergeOption, userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public ObjectResult<Company> Company_Get(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Company>("Company_Get", companyIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public ObjectResult<Company> Company_Get(Nullable<global::System.Int32> companyID, MergeOption mergeOption)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Company>("Company_Get", mergeOption, companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public int Company_Delete(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Company_Delete", companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        public int aspnet_Users_UpdateEmployee(global::System.String username, global::System.String firstName, global::System.String lastName, global::System.String email)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Users_UpdateEmployee", usernameParameter, firstNameParameter, lastNameParameter, emailParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="customerAddress">No Metadata Documentation available.</param>
        /// <param name="city">No Metadata Documentation available.</param>
        /// <param name="province">No Metadata Documentation available.</param>
        /// <param name="postalCode">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        /// <param name="companyID">No Metadata Documentation available.</param>
        /// <param name="approved">No Metadata Documentation available.</param>
        /// <param name="email">No Metadata Documentation available.</param>
        public int aspnet_Users_UpdateCustomer(global::System.String username, global::System.String firstName, global::System.String lastName, global::System.String customerAddress, global::System.String city, global::System.String province, global::System.String postalCode, global::System.String phoneNumber, Nullable<global::System.Int32> companyID, Nullable<global::System.Boolean> approved, global::System.String email)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter customerAddressParameter;
            if (customerAddress != null)
            {
                customerAddressParameter = new ObjectParameter("CustomerAddress", customerAddress);
            }
            else
            {
                customerAddressParameter = new ObjectParameter("CustomerAddress", typeof(global::System.String));
            }
    
            ObjectParameter cityParameter;
            if (city != null)
            {
                cityParameter = new ObjectParameter("City", city);
            }
            else
            {
                cityParameter = new ObjectParameter("City", typeof(global::System.String));
            }
    
            ObjectParameter provinceParameter;
            if (province != null)
            {
                provinceParameter = new ObjectParameter("Province", province);
            }
            else
            {
                provinceParameter = new ObjectParameter("Province", typeof(global::System.String));
            }
    
            ObjectParameter postalCodeParameter;
            if (postalCode != null)
            {
                postalCodeParameter = new ObjectParameter("PostalCode", postalCode);
            }
            else
            {
                postalCodeParameter = new ObjectParameter("PostalCode", typeof(global::System.String));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber != null)
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", typeof(global::System.String));
            }
    
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            ObjectParameter approvedParameter;
            if (approved.HasValue)
            {
                approvedParameter = new ObjectParameter("Approved", approved);
            }
            else
            {
                approvedParameter = new ObjectParameter("Approved", typeof(global::System.Boolean));
            }
    
            ObjectParameter emailParameter;
            if (email != null)
            {
                emailParameter = new ObjectParameter("Email", email);
            }
            else
            {
                emailParameter = new ObjectParameter("Email", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Users_UpdateCustomer", usernameParameter, firstNameParameter, lastNameParameter, customerAddressParameter, cityParameter, provinceParameter, postalCodeParameter, phoneNumberParameter, companyIDParameter, approvedParameter, emailParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="employeeID">No Metadata Documentation available.</param>
        public int aspnet_Users_UnArchiveEmployee(Nullable<global::System.Guid> employeeID)
        {
            ObjectParameter employeeIDParameter;
            if (employeeID.HasValue)
            {
                employeeIDParameter = new ObjectParameter("EmployeeID", employeeID);
            }
            else
            {
                employeeIDParameter = new ObjectParameter("EmployeeID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("aspnet_Users_UnArchiveEmployee", employeeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="customerId">No Metadata Documentation available.</param>
        public int aspnet_Users_UnArchiveCustomer(Nullable<global::System.Guid> customerId)
        {
            ObjectParameter customerIdParameter;
            if (customerId.HasValue)
            {
                customerIdParameter = new ObjectParameter("CustomerId", customerId);
            }
            else
            {
                customerIdParameter = new ObjectParameter("CustomerId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("aspnet_Users_UnArchiveCustomer", customerIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="roleName">No Metadata Documentation available.</param>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int aspnet_Users_RemoveEmployeeFromRole(global::System.String roleName, Nullable<global::System.Guid> userId)
        {
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("aspnet_Users_RemoveEmployeeFromRole", roleNameParameter, userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_LookupCustomerByName(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_LookupCustomerByName", usernameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="username">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_LookupCustomerByName(global::System.String username, MergeOption mergeOption)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_LookupCustomerByName", mergeOption, usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_LookupCustomer(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_LookupCustomer", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_LookupCustomer(Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_LookupCustomer", mergeOption, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<aspnet_Users> aspnet_Users_ListNotApprovedCustomers()
        {
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_ListNotApprovedCustomers");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<aspnet_Users> aspnet_Users_ListNotApprovedCustomers(MergeOption mergeOption)
        {
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_ListNotApprovedCustomers", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetEmployees_Result> aspnet_Users_ListEmployees()
        {
            return base.ExecuteFunction<GetEmployees_Result>("aspnet_Users_ListEmployees");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ListCustomers_Result> aspnet_Users_ListCustomers()
        {
            return base.ExecuteFunction<ListCustomers_Result>("aspnet_Users_ListCustomers");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetEmployees_Result> aspnet_Users_ListArchivedEmployees()
        {
            return base.ExecuteFunction<GetEmployees_Result>("aspnet_Users_ListArchivedEmployees");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ListCustomers_Result> aspnet_Users_ListArchivedCustomers()
        {
            return base.ExecuteFunction<ListCustomers_Result>("aspnet_Users_ListArchivedCustomers");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ListAllUsers_Result> aspnet_Users_ListAllUsers()
        {
            return base.ExecuteFunction<ListAllUsers_Result>("aspnet_Users_ListAllUsers");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Boolean>> aspnet_Users_IsEmployeeAdmin(Nullable<global::System.Guid> userId)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Boolean>>("aspnet_Users_IsEmployeeAdmin", userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        /// <param name="firstName">No Metadata Documentation available.</param>
        /// <param name="lastName">No Metadata Documentation available.</param>
        /// <param name="customerAddress">No Metadata Documentation available.</param>
        /// <param name="city">No Metadata Documentation available.</param>
        /// <param name="province">No Metadata Documentation available.</param>
        /// <param name="postalCode">No Metadata Documentation available.</param>
        /// <param name="phoneNumber">No Metadata Documentation available.</param>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public int aspnet_Users_Insert_Customer(Nullable<global::System.Guid> userId, global::System.String firstName, global::System.String lastName, global::System.String customerAddress, global::System.String city, global::System.String province, global::System.String postalCode, global::System.String phoneNumber, Nullable<global::System.Int32> companyID)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            ObjectParameter firstNameParameter;
            if (firstName != null)
            {
                firstNameParameter = new ObjectParameter("FirstName", firstName);
            }
            else
            {
                firstNameParameter = new ObjectParameter("FirstName", typeof(global::System.String));
            }
    
            ObjectParameter lastNameParameter;
            if (lastName != null)
            {
                lastNameParameter = new ObjectParameter("LastName", lastName);
            }
            else
            {
                lastNameParameter = new ObjectParameter("LastName", typeof(global::System.String));
            }
    
            ObjectParameter customerAddressParameter;
            if (customerAddress != null)
            {
                customerAddressParameter = new ObjectParameter("CustomerAddress", customerAddress);
            }
            else
            {
                customerAddressParameter = new ObjectParameter("CustomerAddress", typeof(global::System.String));
            }
    
            ObjectParameter cityParameter;
            if (city != null)
            {
                cityParameter = new ObjectParameter("City", city);
            }
            else
            {
                cityParameter = new ObjectParameter("City", typeof(global::System.String));
            }
    
            ObjectParameter provinceParameter;
            if (province != null)
            {
                provinceParameter = new ObjectParameter("Province", province);
            }
            else
            {
                provinceParameter = new ObjectParameter("Province", typeof(global::System.String));
            }
    
            ObjectParameter postalCodeParameter;
            if (postalCode != null)
            {
                postalCodeParameter = new ObjectParameter("PostalCode", postalCode);
            }
            else
            {
                postalCodeParameter = new ObjectParameter("PostalCode", typeof(global::System.String));
            }
    
            ObjectParameter phoneNumberParameter;
            if (phoneNumber != null)
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", phoneNumber);
            }
            else
            {
                phoneNumberParameter = new ObjectParameter("PhoneNumber", typeof(global::System.String));
            }
    
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Users_Insert_Customer", userIdParameter, firstNameParameter, lastNameParameter, customerAddressParameter, cityParameter, provinceParameter, postalCodeParameter, phoneNumberParameter, companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="employeeUsername">No Metadata Documentation available.</param>
        public ObjectResult<GetEmployees_Result> aspnet_Users_GetEmployeeByUsername(global::System.String employeeUsername)
        {
            ObjectParameter employeeUsernameParameter;
            if (employeeUsername != null)
            {
                employeeUsernameParameter = new ObjectParameter("EmployeeUsername", employeeUsername);
            }
            else
            {
                employeeUsernameParameter = new ObjectParameter("EmployeeUsername", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetEmployees_Result>("aspnet_Users_GetEmployeeByUsername", employeeUsernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="employeeID">No Metadata Documentation available.</param>
        public ObjectResult<GetEmployees_Result> aspnet_Users_GetEmployee(Nullable<global::System.Guid> employeeID)
        {
            ObjectParameter employeeIDParameter;
            if (employeeID.HasValue)
            {
                employeeIDParameter = new ObjectParameter("EmployeeID", employeeID);
            }
            else
            {
                employeeIDParameter = new ObjectParameter("EmployeeID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<GetEmployees_Result>("aspnet_Users_GetEmployee", employeeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="customerID">No Metadata Documentation available.</param>
        public ObjectResult<ListCustomers_Result> aspnet_Users_GetCustomer(Nullable<global::System.Guid> customerID)
        {
            ObjectParameter customerIDParameter;
            if (customerID.HasValue)
            {
                customerIDParameter = new ObjectParameter("CustomerID", customerID);
            }
            else
            {
                customerIDParameter = new ObjectParameter("CustomerID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<ListCustomers_Result>("aspnet_Users_GetCustomer", customerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int aspnet_Users_ArchiveCustomer(Nullable<global::System.Guid> userId)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("aspnet_Users_ArchiveCustomer", userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        public int aspnet_Users_ApproveCustomer(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Users_ApproveCustomer", usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public int aspnet_Users_AddEmployeeToRole(global::System.String username, global::System.String roleName)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Users_AddEmployeeToRole", usernameParameter, roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobControlID">No Metadata Documentation available.</param>
        /// <param name="controlName">No Metadata Documentation available.</param>
        /// <param name="jobControlTypeID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> JobControl_Update(Nullable<global::System.Int32> jobControlID, global::System.String controlName, Nullable<global::System.Int32> jobControlTypeID)
        {
            ObjectParameter jobControlIDParameter;
            if (jobControlID.HasValue)
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", jobControlID);
            }
            else
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", typeof(global::System.Int32));
            }
    
            ObjectParameter controlNameParameter;
            if (controlName != null)
            {
                controlNameParameter = new ObjectParameter("ControlName", controlName);
            }
            else
            {
                controlNameParameter = new ObjectParameter("ControlName", typeof(global::System.String));
            }
    
            ObjectParameter jobControlTypeIDParameter;
            if (jobControlTypeID.HasValue)
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", jobControlTypeID);
            }
            else
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobControl_Update", jobControlIDParameter, controlNameParameter, jobControlTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<JobControl_Get_Result> JobControl_List()
        {
            return base.ExecuteFunction<JobControl_Get_Result>("JobControl_List");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="controlName">No Metadata Documentation available.</param>
        /// <param name="jobControlTypeID">No Metadata Documentation available.</param>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> JobControl_Insert(global::System.String controlName, Nullable<global::System.Int32> jobControlTypeID, Nullable<global::System.Int32> jobTypeID)
        {
            ObjectParameter controlNameParameter;
            if (controlName != null)
            {
                controlNameParameter = new ObjectParameter("ControlName", controlName);
            }
            else
            {
                controlNameParameter = new ObjectParameter("ControlName", typeof(global::System.String));
            }
    
            ObjectParameter jobControlTypeIDParameter;
            if (jobControlTypeID.HasValue)
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", jobControlTypeID);
            }
            else
            {
                jobControlTypeIDParameter = new ObjectParameter("JobControlTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobControl_Insert", controlNameParameter, jobControlTypeIDParameter, jobTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobControlID">No Metadata Documentation available.</param>
        public ObjectResult<JobControl_Get_Result> JobControl_Get(Nullable<global::System.Int32> jobControlID)
        {
            ObjectParameter jobControlIDParameter;
            if (jobControlID.HasValue)
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", jobControlID);
            }
            else
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobControl_Get_Result>("JobControl_Get", jobControlIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobControlID">No Metadata Documentation available.</param>
        public int JobControl_Delete(Nullable<global::System.Int32> jobControlID)
        {
            ObjectParameter jobControlIDParameter;
            if (jobControlID.HasValue)
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", jobControlID);
            }
            else
            {
                jobControlIDParameter = new ObjectParameter("JobControlID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobControl_Delete", jobControlIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        public ObjectResult<JobControl_Get_Result> JobControl_ListByJobType(Nullable<global::System.Int32> jobTypeID)
        {
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobControl_Get_Result>("JobControl_ListByJobType", jobTypeIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<Job> Job_Get(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Job>("Job_Get", jobIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<Job> Job_Get(Nullable<global::System.Int32> jobID, MergeOption mergeOption)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<Job>("Job_Get", mergeOption, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        /// <param name="specialInstructions">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="deliveryOrPickup">No Metadata Documentation available.</param>
        /// <param name="customerID">No Metadata Documentation available.</param>
        /// <param name="promiseDate">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Job_Insert(Nullable<global::System.Int32> jobTypeID, global::System.String specialInstructions, Nullable<global::System.Int32> quantity, global::System.String deliveryOrPickup, Nullable<global::System.Guid> customerID, Nullable<global::System.DateTime> promiseDate)
        {
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter specialInstructionsParameter;
            if (specialInstructions != null)
            {
                specialInstructionsParameter = new ObjectParameter("SpecialInstructions", specialInstructions);
            }
            else
            {
                specialInstructionsParameter = new ObjectParameter("SpecialInstructions", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter deliveryOrPickupParameter;
            if (deliveryOrPickup != null)
            {
                deliveryOrPickupParameter = new ObjectParameter("DeliveryOrPickup", deliveryOrPickup);
            }
            else
            {
                deliveryOrPickupParameter = new ObjectParameter("DeliveryOrPickup", typeof(global::System.String));
            }
    
            ObjectParameter customerIDParameter;
            if (customerID.HasValue)
            {
                customerIDParameter = new ObjectParameter("CustomerID", customerID);
            }
            else
            {
                customerIDParameter = new ObjectParameter("CustomerID", typeof(global::System.Guid));
            }
    
            ObjectParameter promiseDateParameter;
            if (promiseDate.HasValue)
            {
                promiseDateParameter = new ObjectParameter("PromiseDate", promiseDate);
            }
            else
            {
                promiseDateParameter = new ObjectParameter("PromiseDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Job_Insert", jobTypeIDParameter, specialInstructionsParameter, quantityParameter, deliveryOrPickupParameter, customerIDParameter, promiseDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int JobJobStatus_Change(Nullable<global::System.Int32> jobStatusID, Nullable<global::System.Int32> jobID, Nullable<global::System.Guid> userID)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("JobJobStatus_Change", jobStatusIDParameter, jobIDParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        public ObjectResult<ListByJobStatus_Result> Job_ListByJobStatus(Nullable<global::System.Int32> jobStatusID)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<ListByJobStatus_Result>("Job_ListByJobStatus", jobStatusIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobInfo> JobInfo_ListByJob(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobInfo>("JobInfo_ListByJob", jobIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobInfo> JobInfo_ListByJob(Nullable<global::System.Int32> jobID, MergeOption mergeOption)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobInfo>("JobInfo_ListByJob", mergeOption, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public int JobJobStatus_Initialize(Nullable<global::System.Int32> jobID, Nullable<global::System.Guid> userID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("JobJobStatus_Initialize", jobIDParameter, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobJobStatus> JobJobStatus_GetCurrentByJobID(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobJobStatus>("JobJobStatus_GetCurrentByJobID", jobIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobJobStatus> JobJobStatus_GetCurrentByJobID(Nullable<global::System.Int32> jobID, MergeOption mergeOption)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobJobStatus>("JobJobStatus_GetCurrentByJobID", mergeOption, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobStatusesByJobID_Result> JobJobStatus_ListJobStatusesByJobID(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatusesByJobID_Result>("JobJobStatus_ListJobStatusesByJobID", jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_GetUser(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_GetUser", usernameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="username">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_GetUser(global::System.String username, MergeOption mergeOption)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_GetUser", mergeOption, usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public int Company_Archive(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Company_Archive", companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Company> Company_ListArchived()
        {
            return base.ExecuteFunction<Company>("Company_ListArchived");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<Company> Company_ListArchived(MergeOption mergeOption)
        {
            return base.ExecuteFunction<Company>("Company_ListArchived", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public int Company_UnArchive(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Company_UnArchive", companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_ListArchivedByCompany(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_ListArchivedByCompany", companyIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_ListArchivedByCompany(Nullable<global::System.Int32> companyID, MergeOption mergeOption)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_ListArchivedByCompany", mergeOption, companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_ListByCompany(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_ListByCompany", companyIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public ObjectResult<aspnet_Users> aspnet_Users_ListByCompany(Nullable<global::System.Int32> companyID, MergeOption mergeOption)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<aspnet_Users>("aspnet_Users_ListByCompany", mergeOption, companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userName">No Metadata Documentation available.</param>
        public int aspnet_Users_MakeCustomerAdmin(global::System.String userName)
        {
            ObjectParameter userNameParameter;
            if (userName != null)
            {
                userNameParameter = new ObjectParameter("UserName", userName);
            }
            else
            {
                userNameParameter = new ObjectParameter("UserName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("aspnet_Users_MakeCustomerAdmin", userNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int aspnet_Users_MakeCustomerAdminByUserId(Nullable<global::System.Guid> userId)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("aspnet_Users_MakeCustomerAdminByUserId", userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userId">No Metadata Documentation available.</param>
        public int aspnet_Users_MakeCustomerNotAdmin(Nullable<global::System.Guid> userId)
        {
            ObjectParameter userIdParameter;
            if (userId.HasValue)
            {
                userIdParameter = new ObjectParameter("UserId", userId);
            }
            else
            {
                userIdParameter = new ObjectParameter("UserId", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction("aspnet_Users_MakeCustomerNotAdmin", userIdParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public int aspnet_Users_AddUserToCompany(Nullable<global::System.Guid> userID, Nullable<global::System.Int32> companyID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("aspnet_Users_AddUserToCompany", userIDParameter, companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="customerUsername">No Metadata Documentation available.</param>
        public ObjectResult<CustomerDashboard> Job_ListByCustomerUsername(global::System.String customerUsername)
        {
            ObjectParameter customerUsernameParameter;
            if (customerUsername != null)
            {
                customerUsernameParameter = new ObjectParameter("CustomerUsername", customerUsername);
            }
            else
            {
                customerUsernameParameter = new ObjectParameter("CustomerUsername", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<CustomerDashboard>("Job_ListByCustomerUsername", customerUsernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<ListJobStatusWithStatusName_Result> JobStatus_ListWithStatusName()
        {
            return base.ExecuteFunction<ListJobStatusWithStatusName_Result>("JobStatus_ListWithStatusName");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="statusID">No Metadata Documentation available.</param>
        public ObjectResult<EmployeeRole> EmployeeRole_GetByStatusID(Nullable<global::System.Int32> statusID)
        {
            ObjectParameter statusIDParameter;
            if (statusID.HasValue)
            {
                statusIDParameter = new ObjectParameter("StatusID", statusID);
            }
            else
            {
                statusIDParameter = new ObjectParameter("StatusID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_GetByStatusID", statusIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="statusID">No Metadata Documentation available.</param>
        public ObjectResult<EmployeeRole> EmployeeRole_GetByStatusID(Nullable<global::System.Int32> statusID, MergeOption mergeOption)
        {
            ObjectParameter statusIDParameter;
            if (statusID.HasValue)
            {
                statusIDParameter = new ObjectParameter("StatusID", statusID);
            }
            else
            {
                statusIDParameter = new ObjectParameter("StatusID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_GetByStatusID", mergeOption, statusIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<EmployeeRole> EmployeeRole_ListByEmployeeID(Nullable<global::System.Guid> userID)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_ListByEmployeeID", userIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="userID">No Metadata Documentation available.</param>
        public ObjectResult<EmployeeRole> EmployeeRole_ListByEmployeeID(Nullable<global::System.Guid> userID, MergeOption mergeOption)
        {
            ObjectParameter userIDParameter;
            if (userID.HasValue)
            {
                userIDParameter = new ObjectParameter("UserID", userID);
            }
            else
            {
                userIDParameter = new ObjectParameter("UserID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_ListByEmployeeID", mergeOption, userIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        /// <param name="employeeRoleID">No Metadata Documentation available.</param>
        public int JobStatus_Insert(global::System.String name, Nullable<global::System.Int32> employeeRoleID)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            ObjectParameter employeeRoleIDParameter;
            if (employeeRoleID.HasValue)
            {
                employeeRoleIDParameter = new ObjectParameter("EmployeeRoleID", employeeRoleID);
            }
            else
            {
                employeeRoleIDParameter = new ObjectParameter("EmployeeRoleID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobStatus_Insert", nameParameter, employeeRoleIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> JobStatus_GetFirstOrderingNo()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobStatus_GetFirstOrderingNo");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<Nullable<global::System.Int32>> JobStatus_GetLastOrderingNo()
        {
            return base.ExecuteFunction<Nullable<global::System.Int32>>("JobStatus_GetLastOrderingNo");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="orderingNumber">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_GetByOrderingNumber(Nullable<global::System.Int32> orderingNumber)
        {
            ObjectParameter orderingNumberParameter;
            if (orderingNumber.HasValue)
            {
                orderingNumberParameter = new ObjectParameter("OrderingNumber", orderingNumber);
            }
            else
            {
                orderingNumberParameter = new ObjectParameter("OrderingNumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_GetByOrderingNumber", orderingNumberParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="orderingNumber">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_GetByOrderingNumber(Nullable<global::System.Int32> orderingNumber, MergeOption mergeOption)
        {
            ObjectParameter orderingNumberParameter;
            if (orderingNumber.HasValue)
            {
                orderingNumberParameter = new ObjectParameter("OrderingNumber", orderingNumber);
            }
            else
            {
                orderingNumberParameter = new ObjectParameter("OrderingNumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_GetByOrderingNumber", mergeOption, orderingNumberParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        /// <param name="orderingNumber">No Metadata Documentation available.</param>
        public int JobStatus_ChangeOrderingNumber(Nullable<global::System.Int32> jobStatusID, Nullable<global::System.Int32> orderingNumber)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            ObjectParameter orderingNumberParameter;
            if (orderingNumber.HasValue)
            {
                orderingNumberParameter = new ObjectParameter("OrderingNumber", orderingNumber);
            }
            else
            {
                orderingNumberParameter = new ObjectParameter("OrderingNumber", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("JobStatus_ChangeOrderingNumber", jobStatusIDParameter, orderingNumberParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_Get(Nullable<global::System.Int32> jobStatusID)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_Get", jobStatusIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobStatusID">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_Get(Nullable<global::System.Int32> jobStatusID, MergeOption mergeOption)
        {
            ObjectParameter jobStatusIDParameter;
            if (jobStatusID.HasValue)
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", jobStatusID);
            }
            else
            {
                jobStatusIDParameter = new ObjectParameter("JobStatusID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_Get", mergeOption, jobStatusIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_GetByName(global::System.String name)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_GetByName", nameParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_GetByName(global::System.String name, MergeOption mergeOption)
        {
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("Name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("Name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_GetByName", mergeOption, nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<JobStatus> JobStatus_List()
        {
            return base.ExecuteFunction<JobStatus>("JobStatus_List");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<JobStatus> JobStatus_List(MergeOption mergeOption)
        {
            return base.ExecuteFunction<JobStatus>("JobStatus_List", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<JobStatus> JobStatus_ListArchived()
        {
            return base.ExecuteFunction<JobStatus>("JobStatus_ListArchived");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<JobStatus> JobStatus_ListArchived(MergeOption mergeOption)
        {
            return base.ExecuteFunction<JobStatus>("JobStatus_ListArchived", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="roleID">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_ListByRole(Nullable<global::System.Int32> roleID)
        {
            ObjectParameter roleIDParameter;
            if (roleID.HasValue)
            {
                roleIDParameter = new ObjectParameter("RoleID", roleID);
            }
            else
            {
                roleIDParameter = new ObjectParameter("RoleID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_ListByRole", roleIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="roleID">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> JobStatus_ListByRole(Nullable<global::System.Int32> roleID, MergeOption mergeOption)
        {
            ObjectParameter roleIDParameter;
            if (roleID.HasValue)
            {
                roleIDParameter = new ObjectParameter("RoleID", roleID);
            }
            else
            {
                roleIDParameter = new ObjectParameter("RoleID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("JobStatus_ListByRole", mergeOption, roleIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> Job_GetStatus(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("Job_GetStatus", jobIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<JobStatus> Job_GetStatus(Nullable<global::System.Int32> jobID, MergeOption mergeOption)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobStatus>("Job_GetStatus", mergeOption, jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<GetOutstandingInvoices_Result> Job_GetOutstandingInvoices()
        {
            return base.ExecuteFunction<GetOutstandingInvoices_Result>("Job_GetOutstandingInvoices");
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="messageSubject">No Metadata Documentation available.</param>
        /// <param name="messageBody">No Metadata Documentation available.</param>
        /// <param name="jobID">No Metadata Documentation available.</param>
        /// <param name="sentFrom">No Metadata Documentation available.</param>
        /// <param name="sentTo">No Metadata Documentation available.</param>
        /// <param name="messagedOn">No Metadata Documentation available.</param>
        public int UserMessage_Insert(global::System.String messageSubject, global::System.String messageBody, Nullable<global::System.Int32> jobID, Nullable<global::System.Guid> sentFrom, Nullable<global::System.Guid> sentTo, Nullable<global::System.DateTime> messagedOn)
        {
            ObjectParameter messageSubjectParameter;
            if (messageSubject != null)
            {
                messageSubjectParameter = new ObjectParameter("MessageSubject", messageSubject);
            }
            else
            {
                messageSubjectParameter = new ObjectParameter("MessageSubject", typeof(global::System.String));
            }
    
            ObjectParameter messageBodyParameter;
            if (messageBody != null)
            {
                messageBodyParameter = new ObjectParameter("MessageBody", messageBody);
            }
            else
            {
                messageBodyParameter = new ObjectParameter("MessageBody", typeof(global::System.String));
            }
    
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            ObjectParameter sentFromParameter;
            if (sentFrom.HasValue)
            {
                sentFromParameter = new ObjectParameter("SentFrom", sentFrom);
            }
            else
            {
                sentFromParameter = new ObjectParameter("SentFrom", typeof(global::System.Guid));
            }
    
            ObjectParameter sentToParameter;
            if (sentTo.HasValue)
            {
                sentToParameter = new ObjectParameter("SentTo", sentTo);
            }
            else
            {
                sentToParameter = new ObjectParameter("SentTo", typeof(global::System.Guid));
            }
    
            ObjectParameter messagedOnParameter;
            if (messagedOn.HasValue)
            {
                messagedOnParameter = new ObjectParameter("MessagedOn", messagedOn);
            }
            else
            {
                messagedOnParameter = new ObjectParameter("MessagedOn", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("UserMessage_Insert", messageSubjectParameter, messageBodyParameter, jobIDParameter, sentFromParameter, sentToParameter, messagedOnParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> aspnet_Membership_GetEmailAddressByJobID(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<global::System.String>("aspnet_Membership_GetEmailAddressByJobID", jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobid">No Metadata Documentation available.</param>
        /// <param name="quote">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> Job_AddQuote(Nullable<global::System.Int32> jobid, Nullable<global::System.Decimal> quote)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            ObjectParameter quoteParameter;
            if (quote.HasValue)
            {
                quoteParameter = new ObjectParameter("quote", quote);
            }
            else
            {
                quoteParameter = new ObjectParameter("quote", typeof(global::System.Decimal));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("Job_AddQuote", jobidParameter, quoteParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobstatusid">No Metadata Documentation available.</param>
        /// <param name="name">No Metadata Documentation available.</param>
        public ObjectResult<JobsByJobStatusID_Result> ListJobsByJobStatusIDCustomerName(Nullable<global::System.Int32> jobstatusid, global::System.String name)
        {
            ObjectParameter jobstatusidParameter;
            if (jobstatusid.HasValue)
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", jobstatusid);
            }
            else
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", typeof(global::System.Int32));
            }
    
            ObjectParameter nameParameter;
            if (name != null)
            {
                nameParameter = new ObjectParameter("name", name);
            }
            else
            {
                nameParameter = new ObjectParameter("name", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<JobsByJobStatusID_Result>("ListJobsByJobStatusIDCustomerName", jobstatusidParameter, nameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobstatusid">No Metadata Documentation available.</param>
        /// <param name="companyname">No Metadata Documentation available.</param>
        public ObjectResult<JobsByJobStatusID_Result> ListJobsByJobStatusIDCompanyName(Nullable<global::System.Int32> jobstatusid, global::System.String companyname)
        {
            ObjectParameter jobstatusidParameter;
            if (jobstatusid.HasValue)
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", jobstatusid);
            }
            else
            {
                jobstatusidParameter = new ObjectParameter("jobstatusid", typeof(global::System.Int32));
            }
    
            ObjectParameter companynameParameter;
            if (companyname != null)
            {
                companynameParameter = new ObjectParameter("companyname", companyname);
            }
            else
            {
                companynameParameter = new ObjectParameter("companyname", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<JobsByJobStatusID_Result>("ListJobsByJobStatusIDCompanyName", jobstatusidParameter, companynameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="customerID">No Metadata Documentation available.</param>
        public ObjectResult<Company> Company_GetByCustomer(Nullable<global::System.Guid> customerID)
        {
            ObjectParameter customerIDParameter;
            if (customerID.HasValue)
            {
                customerIDParameter = new ObjectParameter("CustomerID", customerID);
            }
            else
            {
                customerIDParameter = new ObjectParameter("CustomerID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Company>("Company_GetByCustomer", customerIDParameter);
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        /// <param name="customerID">No Metadata Documentation available.</param>
        public ObjectResult<Company> Company_GetByCustomer(Nullable<global::System.Guid> customerID, MergeOption mergeOption)
        {
            ObjectParameter customerIDParameter;
            if (customerID.HasValue)
            {
                customerIDParameter = new ObjectParameter("CustomerID", customerID);
            }
            else
            {
                customerIDParameter = new ObjectParameter("CustomerID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<Company>("Company_GetByCustomer", mergeOption, customerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public ObjectResult<Nullable<global::System.Int32>> EmployeeRole_IsEmployeeInRole(global::System.String username, global::System.String roleName)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<Nullable<global::System.Int32>>("EmployeeRole_IsEmployeeInRole", usernameParameter, roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public int Job_MarkAsInvoiced(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Job_MarkAsInvoiced", jobIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public ObjectResult<CustomerDashboard> Job_ListByCompany(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<CustomerDashboard>("Job_ListByCompany", companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public int Company_Approve(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Company_Approve", companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="companyID">No Metadata Documentation available.</param>
        public int Company_Disapprove(Nullable<global::System.Int32> companyID)
        {
            ObjectParameter companyIDParameter;
            if (companyID.HasValue)
            {
                companyIDParameter = new ObjectParameter("CompanyID", companyID);
            }
            else
            {
                companyIDParameter = new ObjectParameter("CompanyID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Company_Disapprove", companyIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="username">No Metadata Documentation available.</param>
        public ObjectResult<GetOutstandingInvoicesByCustomer_Result> Job_GetOutstandingInvoicesByCustomer(global::System.String username)
        {
            ObjectParameter usernameParameter;
            if (username != null)
            {
                usernameParameter = new ObjectParameter("Username", username);
            }
            else
            {
                usernameParameter = new ObjectParameter("Username", typeof(global::System.String));
            }
    
            return base.ExecuteFunction<GetOutstandingInvoicesByCustomer_Result>("Job_GetOutstandingInvoicesByCustomer", usernameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobid">No Metadata Documentation available.</param>
        public ObjectResult<JobDetailsByJobID_Result> GetJobDetailsByJobID(Nullable<global::System.Int32> jobid)
        {
            ObjectParameter jobidParameter;
            if (jobid.HasValue)
            {
                jobidParameter = new ObjectParameter("jobid", jobid);
            }
            else
            {
                jobidParameter = new ObjectParameter("jobid", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction<JobDetailsByJobID_Result>("GetJobDetailsByJobID", jobidParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="userid">No Metadata Documentation available.</param>
        public ObjectResult<global::System.String> GetUserNameByUserID(Nullable<global::System.Guid> userid)
        {
            ObjectParameter useridParameter;
            if (userid.HasValue)
            {
                useridParameter = new ObjectParameter("userid", userid);
            }
            else
            {
                useridParameter = new ObjectParameter("userid", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<global::System.String>("GetUserNameByUserID", useridParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        /// <param name="jobTypeID">No Metadata Documentation available.</param>
        /// <param name="specialInstructions">No Metadata Documentation available.</param>
        /// <param name="quantity">No Metadata Documentation available.</param>
        /// <param name="deliveryOrPickup">No Metadata Documentation available.</param>
        /// <param name="customerID">No Metadata Documentation available.</param>
        /// <param name="promiseDate">No Metadata Documentation available.</param>
        /// <param name="startDate">No Metadata Documentation available.</param>
        public int Job_Update(Nullable<global::System.Int32> jobID, Nullable<global::System.Int32> jobTypeID, global::System.String specialInstructions, Nullable<global::System.Int32> quantity, global::System.String deliveryOrPickup, Nullable<global::System.Guid> customerID, Nullable<global::System.DateTime> promiseDate, Nullable<global::System.DateTime> startDate)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            ObjectParameter jobTypeIDParameter;
            if (jobTypeID.HasValue)
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", jobTypeID);
            }
            else
            {
                jobTypeIDParameter = new ObjectParameter("JobTypeID", typeof(global::System.Int32));
            }
    
            ObjectParameter specialInstructionsParameter;
            if (specialInstructions != null)
            {
                specialInstructionsParameter = new ObjectParameter("SpecialInstructions", specialInstructions);
            }
            else
            {
                specialInstructionsParameter = new ObjectParameter("SpecialInstructions", typeof(global::System.String));
            }
    
            ObjectParameter quantityParameter;
            if (quantity.HasValue)
            {
                quantityParameter = new ObjectParameter("Quantity", quantity);
            }
            else
            {
                quantityParameter = new ObjectParameter("Quantity", typeof(global::System.Int32));
            }
    
            ObjectParameter deliveryOrPickupParameter;
            if (deliveryOrPickup != null)
            {
                deliveryOrPickupParameter = new ObjectParameter("DeliveryOrPickup", deliveryOrPickup);
            }
            else
            {
                deliveryOrPickupParameter = new ObjectParameter("DeliveryOrPickup", typeof(global::System.String));
            }
    
            ObjectParameter customerIDParameter;
            if (customerID.HasValue)
            {
                customerIDParameter = new ObjectParameter("CustomerID", customerID);
            }
            else
            {
                customerIDParameter = new ObjectParameter("CustomerID", typeof(global::System.Guid));
            }
    
            ObjectParameter promiseDateParameter;
            if (promiseDate.HasValue)
            {
                promiseDateParameter = new ObjectParameter("PromiseDate", promiseDate);
            }
            else
            {
                promiseDateParameter = new ObjectParameter("PromiseDate", typeof(global::System.DateTime));
            }
    
            ObjectParameter startDateParameter;
            if (startDate.HasValue)
            {
                startDateParameter = new ObjectParameter("StartDate", startDate);
            }
            else
            {
                startDateParameter = new ObjectParameter("StartDate", typeof(global::System.DateTime));
            }
    
            return base.ExecuteFunction("Job_Update", jobIDParameter, jobTypeIDParameter, specialInstructionsParameter, quantityParameter, deliveryOrPickupParameter, customerIDParameter, promiseDateParameter, startDateParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="roleID">No Metadata Documentation available.</param>
        public int EmployeeRole_Archive(Nullable<global::System.Int32> roleID)
        {
            ObjectParameter roleIDParameter;
            if (roleID.HasValue)
            {
                roleIDParameter = new ObjectParameter("RoleID", roleID);
            }
            else
            {
                roleIDParameter = new ObjectParameter("RoleID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("EmployeeRole_Archive", roleIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public int EmployeeRole_Insert(global::System.String roleName)
        {
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EmployeeRole_Insert", roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="roleID">No Metadata Documentation available.</param>
        public int EmployeeRole_UnArchive(Nullable<global::System.Int32> roleID)
        {
            ObjectParameter roleIDParameter;
            if (roleID.HasValue)
            {
                roleIDParameter = new ObjectParameter("RoleID", roleID);
            }
            else
            {
                roleIDParameter = new ObjectParameter("RoleID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("EmployeeRole_UnArchive", roleIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="roleID">No Metadata Documentation available.</param>
        /// <param name="roleName">No Metadata Documentation available.</param>
        public int EmployeeRole_Update(Nullable<global::System.Int32> roleID, global::System.String roleName)
        {
            ObjectParameter roleIDParameter;
            if (roleID.HasValue)
            {
                roleIDParameter = new ObjectParameter("RoleID", roleID);
            }
            else
            {
                roleIDParameter = new ObjectParameter("RoleID", typeof(global::System.Int32));
            }
    
            ObjectParameter roleNameParameter;
            if (roleName != null)
            {
                roleNameParameter = new ObjectParameter("RoleName", roleName);
            }
            else
            {
                roleNameParameter = new ObjectParameter("RoleName", typeof(global::System.String));
            }
    
            return base.ExecuteFunction("EmployeeRole_Update", roleIDParameter, roleNameParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectResult<EmployeeRole> EmployeeRole_ListArchived()
        {
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_ListArchived");
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="mergeOption"></param>
        public ObjectResult<EmployeeRole> EmployeeRole_ListArchived(MergeOption mergeOption)
        {
            return base.ExecuteFunction<EmployeeRole>("EmployeeRole_ListArchived", mergeOption);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="customerID">No Metadata Documentation available.</param>
        public ObjectResult<JobsByCustomer_Result> Job_ListByCustomer(Nullable<global::System.Guid> customerID)
        {
            ObjectParameter customerIDParameter;
            if (customerID.HasValue)
            {
                customerIDParameter = new ObjectParameter("CustomerID", customerID);
            }
            else
            {
                customerIDParameter = new ObjectParameter("CustomerID", typeof(global::System.Guid));
            }
    
            return base.ExecuteFunction<JobsByCustomer_Result>("Job_ListByCustomer", customerIDParameter);
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        /// <param name="jobID">No Metadata Documentation available.</param>
        public int Job_MarkAsPaid(Nullable<global::System.Int32> jobID)
        {
            ObjectParameter jobIDParameter;
            if (jobID.HasValue)
            {
                jobIDParameter = new ObjectParameter("JobID", jobID);
            }
            else
            {
                jobIDParameter = new ObjectParameter("JobID", typeof(global::System.Int32));
            }
    
            return base.ExecuteFunction("Job_MarkAsPaid", jobIDParameter);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="aspnet_Users")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class aspnet_Users : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new aspnet_Users object.
        /// </summary>
        /// <param name="applicationId">Initial value of the ApplicationId property.</param>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="loweredUserName">Initial value of the LoweredUserName property.</param>
        /// <param name="isAnonymous">Initial value of the IsAnonymous property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static aspnet_Users Createaspnet_Users(global::System.Guid applicationId, global::System.Guid userId, global::System.String userName, global::System.String loweredUserName, global::System.Boolean isAnonymous, global::System.DateTime lastActivityDate)
        {
            aspnet_Users aspnet_Users = new aspnet_Users();
            aspnet_Users.ApplicationId = applicationId;
            aspnet_Users.UserId = userId;
            aspnet_Users.UserName = userName;
            aspnet_Users.LoweredUserName = loweredUserName;
            aspnet_Users.IsAnonymous = isAnonymous;
            aspnet_Users.LastActivityDate = lastActivityDate;
            return aspnet_Users;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ApplicationId
        {
            get
            {
                return _ApplicationId;
            }
            set
            {
                OnApplicationIdChanging(value);
                ReportPropertyChanging("ApplicationId");
                _ApplicationId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ApplicationId");
                OnApplicationIdChanged();
            }
        }
        private global::System.Guid _ApplicationId;
        partial void OnApplicationIdChanging(global::System.Guid value);
        partial void OnApplicationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                if (_UserId != value)
                {
                    OnUserIdChanging(value);
                    ReportPropertyChanging("UserId");
                    _UserId = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserId");
                    OnUserIdChanged();
                }
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String LoweredUserName
        {
            get
            {
                return _LoweredUserName;
            }
            set
            {
                OnLoweredUserNameChanging(value);
                ReportPropertyChanging("LoweredUserName");
                _LoweredUserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("LoweredUserName");
                OnLoweredUserNameChanged();
            }
        }
        private global::System.String _LoweredUserName;
        partial void OnLoweredUserNameChanging(global::System.String value);
        partial void OnLoweredUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MobileAlias
        {
            get
            {
                return _MobileAlias;
            }
            set
            {
                OnMobileAliasChanging(value);
                ReportPropertyChanging("MobileAlias");
                _MobileAlias = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MobileAlias");
                OnMobileAliasChanged();
            }
        }
        private global::System.String _MobileAlias;
        partial void OnMobileAliasChanging(global::System.String value);
        partial void OnMobileAliasChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsAnonymous
        {
            get
            {
                return _IsAnonymous;
            }
            set
            {
                OnIsAnonymousChanging(value);
                ReportPropertyChanging("IsAnonymous");
                _IsAnonymous = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAnonymous");
                OnIsAnonymousChanged();
            }
        }
        private global::System.Boolean _IsAnonymous;
        partial void OnIsAnonymousChanging(global::System.Boolean value);
        partial void OnIsAnonymousChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerAddress
        {
            get
            {
                return _CustomerAddress;
            }
            set
            {
                OnCustomerAddressChanging(value);
                ReportPropertyChanging("CustomerAddress");
                _CustomerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerAddress");
                OnCustomerAddressChanged();
            }
        }
        private global::System.String _CustomerAddress;
        partial void OnCustomerAddressChanging(global::System.String value);
        partial void OnCustomerAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Approved;
        partial void OnApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAdmin;
        partial void OnIsAdminChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAdminChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_aspnet_UsersCompany", "Company")]
        public Company Company
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BrentwoodPrintingDBModel.FK_aspnet_UsersCompany", "Company").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BrentwoodPrintingDBModel.FK_aspnet_UsersCompany", "Company").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Company> CompanyReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Company>("BrentwoodPrintingDBModel.FK_aspnet_UsersCompany", "Company");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Company>("BrentwoodPrintingDBModel.FK_aspnet_UsersCompany", "Company", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_Jobaspnet_Users", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("BrentwoodPrintingDBModel.FK_Jobaspnet_Users", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("BrentwoodPrintingDBModel.FK_Jobaspnet_Users", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_UserMessageaspnet_UsersFrom", "UserMessage")]
        public EntityCollection<UserMessage> UserMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMessage>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersFrom", "UserMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMessage>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersFrom", "UserMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_UserMessageaspnet_UsersTo", "UserMessage")]
        public EntityCollection<UserMessage> UserMessages1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMessage>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersTo", "UserMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMessage>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersTo", "UserMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "EmployeeRoleaspnet_Users", "EmployeeRole")]
        public EntityCollection<EmployeeRole> EmployeeRoles
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<EmployeeRole>("BrentwoodPrintingDBModel.EmployeeRoleaspnet_Users", "EmployeeRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<EmployeeRole>("BrentwoodPrintingDBModel.EmployeeRoleaspnet_Users", "EmployeeRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusUserId", "JobJobStatu")]
        public EntityCollection<JobJobStatus> JobJobStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobJobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusUserId", "JobJobStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobJobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusUserId", "JobJobStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="Company")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Company : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Company object.
        /// </summary>
        /// <param name="companyID">Initial value of the CompanyID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="companyAddress">Initial value of the CompanyAddress property.</param>
        /// <param name="city">Initial value of the City property.</param>
        /// <param name="province">Initial value of the Province property.</param>
        /// <param name="postalCode">Initial value of the PostalCode property.</param>
        /// <param name="phoneNumber">Initial value of the PhoneNumber property.</param>
        /// <param name="flagged">Initial value of the Flagged property.</param>
        public static Company CreateCompany(global::System.Int32 companyID, global::System.String name, global::System.String companyAddress, global::System.String city, global::System.String province, global::System.String postalCode, global::System.String phoneNumber, global::System.Boolean flagged)
        {
            Company company = new Company();
            company.CompanyID = companyID;
            company.Name = name;
            company.CompanyAddress = companyAddress;
            company.City = city;
            company.Province = province;
            company.PostalCode = postalCode;
            company.PhoneNumber = phoneNumber;
            company.Flagged = flagged;
            return company;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                if (_CompanyID != value)
                {
                    OnCompanyIDChanging(value);
                    ReportPropertyChanging("CompanyID");
                    _CompanyID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("CompanyID");
                    OnCompanyIDChanged();
                }
            }
        }
        private global::System.Int32 _CompanyID;
        partial void OnCompanyIDChanging(global::System.Int32 value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CompanyAddress
        {
            get
            {
                return _CompanyAddress;
            }
            set
            {
                OnCompanyAddressChanging(value);
                ReportPropertyChanging("CompanyAddress");
                _CompanyAddress = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CompanyAddress");
                OnCompanyAddressChanged();
            }
        }
        private global::System.String _CompanyAddress;
        partial void OnCompanyAddressChanging(global::System.String value);
        partial void OnCompanyAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Website
        {
            get
            {
                return _Website;
            }
            set
            {
                OnWebsiteChanging(value);
                ReportPropertyChanging("Website");
                _Website = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Website");
                OnWebsiteChanged();
            }
        }
        private global::System.String _Website;
        partial void OnWebsiteChanging(global::System.String value);
        partial void OnWebsiteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Flagged
        {
            get
            {
                return _Flagged;
            }
            set
            {
                OnFlaggedChanging(value);
                ReportPropertyChanging("Flagged");
                _Flagged = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Flagged");
                OnFlaggedChanged();
            }
        }
        private global::System.Boolean _Flagged;
        partial void OnFlaggedChanging(global::System.Boolean value);
        partial void OnFlaggedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.String _Archived;
        partial void OnArchivedChanging(global::System.String value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Approved;
        partial void OnApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnApprovedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_aspnet_UsersCompany", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("BrentwoodPrintingDBModel.FK_aspnet_UsersCompany", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("BrentwoodPrintingDBModel.FK_aspnet_UsersCompany", "aspnet_Users", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="EmployeeRole")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class EmployeeRole : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new EmployeeRole object.
        /// </summary>
        /// <param name="roleID">Initial value of the RoleID property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static EmployeeRole CreateEmployeeRole(global::System.Int32 roleID, global::System.String roleName)
        {
            EmployeeRole employeeRole = new EmployeeRole();
            employeeRole.RoleID = roleID;
            employeeRole.RoleName = roleName;
            return employeeRole;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RoleID
        {
            get
            {
                return _RoleID;
            }
            set
            {
                if (_RoleID != value)
                {
                    OnRoleIDChanging(value);
                    ReportPropertyChanging("RoleID");
                    _RoleID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("RoleID");
                    OnRoleIDChanged();
                }
            }
        }
        private global::System.Int32 _RoleID;
        partial void OnRoleIDChanging(global::System.Int32 value);
        partial void OnRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.String _Archived;
        partial void OnArchivedChanging(global::System.String value);
        partial void OnArchivedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "EmployeeRoleaspnet_Users", "aspnet_Users")]
        public EntityCollection<aspnet_Users> aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<aspnet_Users>("BrentwoodPrintingDBModel.EmployeeRoleaspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<aspnet_Users>("BrentwoodPrintingDBModel.EmployeeRoleaspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobStatus_EmployeeRole", "JobStatus")]
        public EntityCollection<JobStatus> JobStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobStatus>("BrentwoodPrintingDBModel.FK_JobStatus_EmployeeRole", "JobStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobStatus>("BrentwoodPrintingDBModel.FK_JobStatus_EmployeeRole", "JobStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="Job")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Job : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        public static Job CreateJob(global::System.Int32 jobID, global::System.Int32 jobTypeID, global::System.Int32 quantity, global::System.String deliveryOrPickup, global::System.Guid customerID)
        {
            Job job = new Job();
            job.JobID = jobID;
            job.JobTypeID = jobTypeID;
            job.Quantity = quantity;
            job.DeliveryOrPickup = deliveryOrPickup;
            job.CustomerID = customerID;
            return job;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                if (_JobID != value)
                {
                    OnJobIDChanging(value);
                    ReportPropertyChanging("JobID");
                    _JobID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobID");
                    OnJobIDChanged();
                }
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                OnJobTypeIDChanging(value);
                ReportPropertyChanging("JobTypeID");
                _JobTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobTypeID");
                OnJobTypeIDChanged();
            }
        }
        private global::System.Int32 _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Int32 value);
        partial void OnJobTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialInstructions
        {
            get
            {
                return _SpecialInstructions;
            }
            set
            {
                OnSpecialInstructionsChanging(value);
                ReportPropertyChanging("SpecialInstructions");
                _SpecialInstructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecialInstructions");
                OnSpecialInstructionsChanged();
            }
        }
        private global::System.String _SpecialInstructions;
        partial void OnSpecialInstructionsChanging(global::System.String value);
        partial void OnSpecialInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Guid _CustomerID;
        partial void OnCustomerIDChanging(global::System.Guid value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoicedDate
        {
            get
            {
                return _InvoicedDate;
            }
            set
            {
                OnInvoicedDateChanging(value);
                ReportPropertyChanging("InvoicedDate");
                _InvoicedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicedDate");
                OnInvoicedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoicedDate;
        partial void OnInvoicedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoicedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Paid
        {
            get
            {
                return _Paid;
            }
            set
            {
                OnPaidChanging(value);
                ReportPropertyChanging("Paid");
                _Paid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Paid");
                OnPaidChanged();
            }
        }
        private global::System.String _Paid;
        partial void OnPaidChanging(global::System.String value);
        partial void OnPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QuoteAmount
        {
            get
            {
                return _QuoteAmount;
            }
            set
            {
                OnQuoteAmountChanging(value);
                ReportPropertyChanging("QuoteAmount");
                _QuoteAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteAmount");
                OnQuoteAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _QuoteAmount;
        partial void OnQuoteAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnQuoteAmountChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_Jobaspnet_Users", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_Jobaspnet_Users", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_Jobaspnet_Users", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_Jobaspnet_Users", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_Jobaspnet_Users", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobAssetJob", "JobAsset")]
        public EntityCollection<JobAsset> JobAssets
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobAsset>("BrentwoodPrintingDBModel.FK_JobAssetJob", "JobAsset");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobAsset>("BrentwoodPrintingDBModel.FK_JobAssetJob", "JobAsset", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobInfoJob", "JobInfo")]
        public EntityCollection<JobInfo> JobInfoes
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobInfo>("BrentwoodPrintingDBModel.FK_JobInfoJob", "JobInfo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobInfo>("BrentwoodPrintingDBModel.FK_JobInfoJob", "JobInfo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobType", "JobType")]
        public JobType JobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobJobType", "JobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobJobType", "JobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobType> JobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobJobType", "JobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobJobType", "JobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobProofJob", "JobProof")]
        public EntityCollection<JobProof> JobProofs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobProof>("BrentwoodPrintingDBModel.FK_JobProofJob", "JobProof");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobProof>("BrentwoodPrintingDBModel.FK_JobProofJob", "JobProof", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_MessageJob", "UserMessage")]
        public EntityCollection<UserMessage> UserMessages
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<UserMessage>("BrentwoodPrintingDBModel.FK_MessageJob", "UserMessage");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<UserMessage>("BrentwoodPrintingDBModel.FK_MessageJob", "UserMessage", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusJobID", "JobJobStatu")]
        public EntityCollection<JobJobStatus> JobJobStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobJobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobID", "JobJobStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobJobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobID", "JobJobStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobAsset")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobAsset : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobAsset object.
        /// </summary>
        /// <param name="jobAssetID">Initial value of the JobAssetID property.</param>
        /// <param name="filepath">Initial value of the Filepath property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        public static JobAsset CreateJobAsset(global::System.Int32 jobAssetID, global::System.String filepath, global::System.Int32 jobID)
        {
            JobAsset jobAsset = new JobAsset();
            jobAsset.JobAssetID = jobAssetID;
            jobAsset.Filepath = filepath;
            jobAsset.JobID = jobID;
            return jobAsset;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobAssetID
        {
            get
            {
                return _JobAssetID;
            }
            set
            {
                if (_JobAssetID != value)
                {
                    OnJobAssetIDChanging(value);
                    ReportPropertyChanging("JobAssetID");
                    _JobAssetID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobAssetID");
                    OnJobAssetIDChanged();
                }
            }
        }
        private global::System.Int32 _JobAssetID;
        partial void OnJobAssetIDChanging(global::System.Int32 value);
        partial void OnJobAssetIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filepath
        {
            get
            {
                return _Filepath;
            }
            set
            {
                OnFilepathChanging(value);
                ReportPropertyChanging("Filepath");
                _Filepath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filepath");
                OnFilepathChanged();
            }
        }
        private global::System.String _Filepath;
        partial void OnFilepathChanging(global::System.String value);
        partial void OnFilepathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobAssetJob", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobAssetJob", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobAssetJob", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobAssetJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobAssetJob", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobControl")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobControl : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobControl object.
        /// </summary>
        /// <param name="jobControlID">Initial value of the JobControlID property.</param>
        /// <param name="controlName">Initial value of the ControlName property.</param>
        /// <param name="jobControlTypeID">Initial value of the JobControlTypeID property.</param>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        public static JobControl CreateJobControl(global::System.Int32 jobControlID, global::System.String controlName, global::System.Int32 jobControlTypeID, global::System.Int32 jobTypeID)
        {
            JobControl jobControl = new JobControl();
            jobControl.JobControlID = jobControlID;
            jobControl.ControlName = controlName;
            jobControl.JobControlTypeID = jobControlTypeID;
            jobControl.JobTypeID = jobTypeID;
            return jobControl;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobControlID
        {
            get
            {
                return _JobControlID;
            }
            set
            {
                if (_JobControlID != value)
                {
                    OnJobControlIDChanging(value);
                    ReportPropertyChanging("JobControlID");
                    _JobControlID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobControlID");
                    OnJobControlIDChanged();
                }
            }
        }
        private global::System.Int32 _JobControlID;
        partial void OnJobControlIDChanging(global::System.Int32 value);
        partial void OnJobControlIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ControlName
        {
            get
            {
                return _ControlName;
            }
            set
            {
                OnControlNameChanging(value);
                ReportPropertyChanging("ControlName");
                _ControlName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ControlName");
                OnControlNameChanged();
            }
        }
        private global::System.String _ControlName;
        partial void OnControlNameChanging(global::System.String value);
        partial void OnControlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobControlTypeID
        {
            get
            {
                return _JobControlTypeID;
            }
            set
            {
                OnJobControlTypeIDChanging(value);
                ReportPropertyChanging("JobControlTypeID");
                _JobControlTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobControlTypeID");
                OnJobControlTypeIDChanged();
            }
        }
        private global::System.Int32 _JobControlTypeID;
        partial void OnJobControlTypeIDChanging(global::System.Int32 value);
        partial void OnJobControlTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                OnJobTypeIDChanging(value);
                ReportPropertyChanging("JobTypeID");
                _JobTypeID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobTypeID");
                OnJobTypeIDChanged();
            }
        }
        private global::System.Int32 _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Int32 value);
        partial void OnJobTypeIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobControlJob", "JobType")]
        public JobType JobType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobControlJob", "JobType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobControlJob", "JobType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobType> JobTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobControlJob", "JobType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobType>("BrentwoodPrintingDBModel.FK_JobControlJob", "JobType", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobControlJobControlType", "JobControlType")]
        public JobControlType JobControlType
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobControlType>("BrentwoodPrintingDBModel.FK_JobControlJobControlType", "JobControlType").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobControlType>("BrentwoodPrintingDBModel.FK_JobControlJobControlType", "JobControlType").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobControlType> JobControlTypeReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobControlType>("BrentwoodPrintingDBModel.FK_JobControlJobControlType", "JobControlType");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobControlType>("BrentwoodPrintingDBModel.FK_JobControlJobControlType", "JobControlType", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobControlType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobControlType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobControlType object.
        /// </summary>
        /// <param name="jobControlTypeID">Initial value of the JobControlTypeID property.</param>
        /// <param name="controlTypeName">Initial value of the ControlTypeName property.</param>
        public static JobControlType CreateJobControlType(global::System.Int32 jobControlTypeID, global::System.String controlTypeName)
        {
            JobControlType jobControlType = new JobControlType();
            jobControlType.JobControlTypeID = jobControlTypeID;
            jobControlType.ControlTypeName = controlTypeName;
            return jobControlType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobControlTypeID
        {
            get
            {
                return _JobControlTypeID;
            }
            set
            {
                if (_JobControlTypeID != value)
                {
                    OnJobControlTypeIDChanging(value);
                    ReportPropertyChanging("JobControlTypeID");
                    _JobControlTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobControlTypeID");
                    OnJobControlTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _JobControlTypeID;
        partial void OnJobControlTypeIDChanging(global::System.Int32 value);
        partial void OnJobControlTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ControlTypeName
        {
            get
            {
                return _ControlTypeName;
            }
            set
            {
                OnControlTypeNameChanging(value);
                ReportPropertyChanging("ControlTypeName");
                _ControlTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ControlTypeName");
                OnControlTypeNameChanged();
            }
        }
        private global::System.String _ControlTypeName;
        partial void OnControlTypeNameChanging(global::System.String value);
        partial void OnControlTypeNameChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobControlJobControlType", "JobControl")]
        public EntityCollection<JobControl> JobControls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobControl>("BrentwoodPrintingDBModel.FK_JobControlJobControlType", "JobControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobControl>("BrentwoodPrintingDBModel.FK_JobControlJobControlType", "JobControl", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobInfo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobInfo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobInfo object.
        /// </summary>
        /// <param name="jobInfoID">Initial value of the JobInfoID property.</param>
        /// <param name="nameKey">Initial value of the NameKey property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        public static JobInfo CreateJobInfo(global::System.Int32 jobInfoID, global::System.String nameKey, global::System.Int32 jobID)
        {
            JobInfo jobInfo = new JobInfo();
            jobInfo.JobInfoID = jobInfoID;
            jobInfo.NameKey = nameKey;
            jobInfo.JobID = jobID;
            return jobInfo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobInfoID
        {
            get
            {
                return _JobInfoID;
            }
            set
            {
                if (_JobInfoID != value)
                {
                    OnJobInfoIDChanging(value);
                    ReportPropertyChanging("JobInfoID");
                    _JobInfoID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobInfoID");
                    OnJobInfoIDChanged();
                }
            }
        }
        private global::System.Int32 _JobInfoID;
        partial void OnJobInfoIDChanging(global::System.Int32 value);
        partial void OnJobInfoIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String NameKey
        {
            get
            {
                return _NameKey;
            }
            set
            {
                OnNameKeyChanging(value);
                ReportPropertyChanging("NameKey");
                _NameKey = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("NameKey");
                OnNameKeyChanged();
            }
        }
        private global::System.String _NameKey;
        partial void OnNameKeyChanging(global::System.String value);
        partial void OnNameKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String DataValue
        {
            get
            {
                return _DataValue;
            }
            set
            {
                OnDataValueChanging(value);
                ReportPropertyChanging("DataValue");
                _DataValue = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("DataValue");
                OnDataValueChanged();
            }
        }
        private global::System.String _DataValue;
        partial void OnDataValueChanging(global::System.String value);
        partial void OnDataValueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobInfoJob", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobInfoJob", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobInfoJob", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobInfoJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobInfoJob", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobJobStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobJobStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobJobStatus object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="userID">Initial value of the UserID property.</param>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        /// <param name="changedOn">Initial value of the ChangedOn property.</param>
        public static JobJobStatus CreateJobJobStatus(global::System.Int32 jobID, global::System.Guid userID, global::System.Int32 jobStatusID, global::System.DateTime changedOn)
        {
            JobJobStatus jobJobStatus = new JobJobStatus();
            jobJobStatus.JobID = jobID;
            jobJobStatus.UserID = userID;
            jobJobStatus.JobStatusID = jobStatusID;
            jobJobStatus.ChangedOn = changedOn;
            return jobJobStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                if (_JobID != value)
                {
                    OnJobIDChanging(value);
                    ReportPropertyChanging("JobID");
                    _JobID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobID");
                    OnJobIDChanged();
                }
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedOn
        {
            get
            {
                return _CompletedOn;
            }
            set
            {
                OnCompletedOnChanging(value);
                ReportPropertyChanging("CompletedOn");
                _CompletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedOn");
                OnCompletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedOn;
        partial void OnCompletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserID
        {
            get
            {
                return _UserID;
            }
            set
            {
                if (_UserID != value)
                {
                    OnUserIDChanging(value);
                    ReportPropertyChanging("UserID");
                    _UserID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserID");
                    OnUserIDChanged();
                }
            }
        }
        private global::System.Guid _UserID;
        partial void OnUserIDChanging(global::System.Guid value);
        partial void OnUserIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                OnJobStatusIDChanging(value);
                ReportPropertyChanging("JobStatusID");
                _JobStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobStatusID");
                OnJobStatusIDChanged();
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime ChangedOn
        {
            get
            {
                return _ChangedOn;
            }
            set
            {
                if (_ChangedOn != value)
                {
                    OnChangedOnChanging(value);
                    ReportPropertyChanging("ChangedOn");
                    _ChangedOn = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ChangedOn");
                    OnChangedOnChanged();
                }
            }
        }
        private global::System.DateTime _ChangedOn;
        partial void OnChangedOnChanging(global::System.DateTime value);
        partial void OnChangedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusUserId", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_JobJobStatusUserId", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_JobJobStatusUserId", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_JobJobStatusUserId", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_JobJobStatusUserId", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusJobID", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobJobStatusJobID", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobJobStatusJobID", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobJobStatusJobID", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobJobStatusJobID", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusJobStatusID", "JobStatus")]
        public JobStatus JobStatu
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobStatusID", "JobStatus").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobStatusID", "JobStatus").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<JobStatus> JobStatuReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<JobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobStatusID", "JobStatus");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<JobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobStatusID", "JobStatus", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobProof")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobProof : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobProof object.
        /// </summary>
        /// <param name="jobProofID">Initial value of the JobProofID property.</param>
        /// <param name="filepath">Initial value of the Filepath property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="active">Initial value of the Active property.</param>
        /// <param name="dateCreated">Initial value of the DateCreated property.</param>
        public static JobProof CreateJobProof(global::System.Int32 jobProofID, global::System.String filepath, global::System.Int32 jobID, global::System.Boolean active, global::System.DateTime dateCreated)
        {
            JobProof jobProof = new JobProof();
            jobProof.JobProofID = jobProofID;
            jobProof.Filepath = filepath;
            jobProof.JobID = jobID;
            jobProof.Active = active;
            jobProof.DateCreated = dateCreated;
            return jobProof;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobProofID
        {
            get
            {
                return _JobProofID;
            }
            set
            {
                if (_JobProofID != value)
                {
                    OnJobProofIDChanging(value);
                    ReportPropertyChanging("JobProofID");
                    _JobProofID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobProofID");
                    OnJobProofIDChanged();
                }
            }
        }
        private global::System.Int32 _JobProofID;
        partial void OnJobProofIDChanging(global::System.Int32 value);
        partial void OnJobProofIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Filepath
        {
            get
            {
                return _Filepath;
            }
            set
            {
                OnFilepathChanging(value);
                ReportPropertyChanging("Filepath");
                _Filepath = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Filepath");
                OnFilepathChanged();
            }
        }
        private global::System.String _Filepath;
        partial void OnFilepathChanging(global::System.String value);
        partial void OnFilepathChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean Active
        {
            get
            {
                return _Active;
            }
            set
            {
                OnActiveChanging(value);
                ReportPropertyChanging("Active");
                _Active = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Active");
                OnActiveChanged();
            }
        }
        private global::System.Boolean _Active;
        partial void OnActiveChanging(global::System.Boolean value);
        partial void OnActiveChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DateCreated
        {
            get
            {
                return _DateCreated;
            }
            set
            {
                OnDateCreatedChanging(value);
                ReportPropertyChanging("DateCreated");
                _DateCreated = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateCreated");
                OnDateCreatedChanged();
            }
        }
        private global::System.DateTime _DateCreated;
        partial void OnDateCreatedChanging(global::System.DateTime value);
        partial void OnDateCreatedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobProofJob", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobProofJob", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobProofJob", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobProofJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("BrentwoodPrintingDBModel.FK_JobProofJob", "Job", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobStatus")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobStatus : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobStatus object.
        /// </summary>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static JobStatus CreateJobStatus(global::System.Int32 jobStatusID, global::System.String name)
        {
            JobStatus jobStatus = new JobStatus();
            jobStatus.JobStatusID = jobStatusID;
            jobStatus.Name = name;
            return jobStatus;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                if (_JobStatusID != value)
                {
                    OnJobStatusIDChanging(value);
                    ReportPropertyChanging("JobStatusID");
                    _JobStatusID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobStatusID");
                    OnJobStatusIDChanged();
                }
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.String _Archived;
        partial void OnArchivedChanging(global::System.String value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> EmployeeRoleID
        {
            get
            {
                return _EmployeeRoleID;
            }
            set
            {
                OnEmployeeRoleIDChanging(value);
                ReportPropertyChanging("EmployeeRoleID");
                _EmployeeRoleID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("EmployeeRoleID");
                OnEmployeeRoleIDChanged();
            }
        }
        private Nullable<global::System.Int32> _EmployeeRoleID;
        partial void OnEmployeeRoleIDChanging(Nullable<global::System.Int32> value);
        partial void OnEmployeeRoleIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> OrderingNumber
        {
            get
            {
                return _OrderingNumber;
            }
            set
            {
                OnOrderingNumberChanging(value);
                ReportPropertyChanging("OrderingNumber");
                _OrderingNumber = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OrderingNumber");
                OnOrderingNumberChanged();
            }
        }
        private Nullable<global::System.Int32> _OrderingNumber;
        partial void OnOrderingNumberChanging(Nullable<global::System.Int32> value);
        partial void OnOrderingNumberChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobStatus_EmployeeRole", "EmployeeRole")]
        public EmployeeRole EmployeeRole
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeRole>("BrentwoodPrintingDBModel.FK_JobStatus_EmployeeRole", "EmployeeRole").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeRole>("BrentwoodPrintingDBModel.FK_JobStatus_EmployeeRole", "EmployeeRole").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<EmployeeRole> EmployeeRoleReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<EmployeeRole>("BrentwoodPrintingDBModel.FK_JobStatus_EmployeeRole", "EmployeeRole");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<EmployeeRole>("BrentwoodPrintingDBModel.FK_JobStatus_EmployeeRole", "EmployeeRole", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobStatusJobStatusID", "JobJobStatu")]
        public EntityCollection<JobJobStatus> JobJobStatus
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobJobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobStatusID", "JobJobStatu");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobJobStatus>("BrentwoodPrintingDBModel.FK_JobJobStatusJobStatusID", "JobJobStatu", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobType")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class JobType : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobType object.
        /// </summary>
        /// <param name="jobTypeID">Initial value of the JobTypeID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        public static JobType CreateJobType(global::System.Int32 jobTypeID, global::System.String name)
        {
            JobType jobType = new JobType();
            jobType.JobTypeID = jobTypeID;
            jobType.Name = name;
            return jobType;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobTypeID
        {
            get
            {
                return _JobTypeID;
            }
            set
            {
                if (_JobTypeID != value)
                {
                    OnJobTypeIDChanging(value);
                    ReportPropertyChanging("JobTypeID");
                    _JobTypeID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("JobTypeID");
                    OnJobTypeIDChanged();
                }
            }
        }
        private global::System.Int32 _JobTypeID;
        partial void OnJobTypeIDChanging(global::System.Int32 value);
        partial void OnJobTypeIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String EstimatedTimeToComplete
        {
            get
            {
                return _EstimatedTimeToComplete;
            }
            set
            {
                OnEstimatedTimeToCompleteChanging(value);
                ReportPropertyChanging("EstimatedTimeToComplete");
                _EstimatedTimeToComplete = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("EstimatedTimeToComplete");
                OnEstimatedTimeToCompleteChanged();
            }
        }
        private global::System.String _EstimatedTimeToComplete;
        partial void OnEstimatedTimeToCompleteChanging(global::System.String value);
        partial void OnEstimatedTimeToCompleteChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobTypeDescription
        {
            get
            {
                return _JobTypeDescription;
            }
            set
            {
                OnJobTypeDescriptionChanging(value);
                ReportPropertyChanging("JobTypeDescription");
                _JobTypeDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobTypeDescription");
                OnJobTypeDescriptionChanged();
            }
        }
        private global::System.String _JobTypeDescription;
        partial void OnJobTypeDescriptionChanging(global::System.String value);
        partial void OnJobTypeDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.String _Archived;
        partial void OnArchivedChanging(global::System.String value);
        partial void OnArchivedChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobJobType", "Job")]
        public EntityCollection<Job> Jobs
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Job>("BrentwoodPrintingDBModel.FK_JobJobType", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Job>("BrentwoodPrintingDBModel.FK_JobJobType", "Job", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_JobControlJob", "JobControl")]
        public EntityCollection<JobControl> JobControls
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<JobControl>("BrentwoodPrintingDBModel.FK_JobControlJob", "JobControl");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<JobControl>("BrentwoodPrintingDBModel.FK_JobControlJob", "JobControl", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="UserMessage")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class UserMessage : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new UserMessage object.
        /// </summary>
        /// <param name="userMessageID">Initial value of the UserMessageID property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="sentFrom">Initial value of the SentFrom property.</param>
        /// <param name="sentTo">Initial value of the SentTo property.</param>
        /// <param name="messagedOn">Initial value of the MessagedOn property.</param>
        public static UserMessage CreateUserMessage(global::System.Int32 userMessageID, global::System.Int32 jobID, global::System.Guid sentFrom, global::System.Guid sentTo, global::System.DateTime messagedOn)
        {
            UserMessage userMessage = new UserMessage();
            userMessage.UserMessageID = userMessageID;
            userMessage.JobID = jobID;
            userMessage.SentFrom = sentFrom;
            userMessage.SentTo = sentTo;
            userMessage.MessagedOn = messagedOn;
            return userMessage;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 UserMessageID
        {
            get
            {
                return _UserMessageID;
            }
            set
            {
                if (_UserMessageID != value)
                {
                    OnUserMessageIDChanging(value);
                    ReportPropertyChanging("UserMessageID");
                    _UserMessageID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("UserMessageID");
                    OnUserMessageIDChanged();
                }
            }
        }
        private global::System.Int32 _UserMessageID;
        partial void OnUserMessageIDChanging(global::System.Int32 value);
        partial void OnUserMessageIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageSubject
        {
            get
            {
                return _MessageSubject;
            }
            set
            {
                OnMessageSubjectChanging(value);
                ReportPropertyChanging("MessageSubject");
                _MessageSubject = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageSubject");
                OnMessageSubjectChanged();
            }
        }
        private global::System.String _MessageSubject;
        partial void OnMessageSubjectChanging(global::System.String value);
        partial void OnMessageSubjectChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String MessageBody
        {
            get
            {
                return _MessageBody;
            }
            set
            {
                OnMessageBodyChanging(value);
                ReportPropertyChanging("MessageBody");
                _MessageBody = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("MessageBody");
                OnMessageBodyChanged();
            }
        }
        private global::System.String _MessageBody;
        partial void OnMessageBodyChanging(global::System.String value);
        partial void OnMessageBodyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SentFrom
        {
            get
            {
                return _SentFrom;
            }
            set
            {
                OnSentFromChanging(value);
                ReportPropertyChanging("SentFrom");
                _SentFrom = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentFrom");
                OnSentFromChanged();
            }
        }
        private global::System.Guid _SentFrom;
        partial void OnSentFromChanging(global::System.Guid value);
        partial void OnSentFromChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid SentTo
        {
            get
            {
                return _SentTo;
            }
            set
            {
                OnSentToChanging(value);
                ReportPropertyChanging("SentTo");
                _SentTo = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SentTo");
                OnSentToChanged();
            }
        }
        private global::System.Guid _SentTo;
        partial void OnSentToChanging(global::System.Guid value);
        partial void OnSentToChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime MessagedOn
        {
            get
            {
                return _MessagedOn;
            }
            set
            {
                OnMessagedOnChanging(value);
                ReportPropertyChanging("MessagedOn");
                _MessagedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("MessagedOn");
                OnMessagedOnChanged();
            }
        }
        private global::System.DateTime _MessagedOn;
        partial void OnMessagedOnChanging(global::System.DateTime value);
        partial void OnMessagedOnChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_UserMessageaspnet_UsersFrom", "aspnet_Users")]
        public aspnet_Users aspnet_Users
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersFrom", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersFrom", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_UsersReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersFrom", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersFrom", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_UserMessageaspnet_UsersTo", "aspnet_Users")]
        public aspnet_Users aspnet_Users1
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersTo", "aspnet_Users").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersTo", "aspnet_Users").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<aspnet_Users> aspnet_Users1Reference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersTo", "aspnet_Users");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<aspnet_Users>("BrentwoodPrintingDBModel.FK_UserMessageaspnet_UsersTo", "aspnet_Users", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("BrentwoodPrintingDBModel", "FK_MessageJob", "Job")]
        public Job Job
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_MessageJob", "Job").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_MessageJob", "Job").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Job> JobReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Job>("BrentwoodPrintingDBModel.FK_MessageJob", "Job");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Job>("BrentwoodPrintingDBModel.FK_MessageJob", "Job", value);
                }
            }
        }

        #endregion

    }

    #endregion

    #region ComplexTypes
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="CustomerDashboard")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CustomerDashboard : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CustomerDashboard object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="jobType">Initial value of the JobType property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        public static CustomerDashboard CreateCustomerDashboard(global::System.Int32 jobID, global::System.String jobType, global::System.Int32 quantity)
        {
            CustomerDashboard customerDashboard = new CustomerDashboard();
            customerDashboard.JobID = jobID;
            customerDashboard.JobType = jobType;
            customerDashboard.Quantity = quantity;
            return customerDashboard;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobType
        {
            get
            {
                return _JobType;
            }
            set
            {
                OnJobTypeChanging(value);
                ReportPropertyChanging("JobType");
                _JobType = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobType");
                OnJobTypeChanged();
            }
        }
        private global::System.String _JobType;
        partial void OnJobTypeChanging(global::System.String value);
        partial void OnJobTypeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="CustomersByJobStatusID_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class CustomersByJobStatusID_Result : ComplexObject
    {
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobStatus
        {
            get
            {
                return _JobStatus;
            }
            set
            {
                OnJobStatusChanging(value);
                ReportPropertyChanging("JobStatus");
                _JobStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobStatus");
                OnJobStatusChanged();
            }
        }
        private global::System.String _JobStatus;
        partial void OnJobStatusChanging(global::System.String value);
        partial void OnJobStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Guid> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerFirstName
        {
            get
            {
                return _CustomerFirstName;
            }
            set
            {
                OnCustomerFirstNameChanging(value);
                ReportPropertyChanging("CustomerFirstName");
                _CustomerFirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerFirstName");
                OnCustomerFirstNameChanged();
            }
        }
        private global::System.String _CustomerFirstName;
        partial void OnCustomerFirstNameChanging(global::System.String value);
        partial void OnCustomerFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerLastName
        {
            get
            {
                return _CustomerLastName;
            }
            set
            {
                OnCustomerLastNameChanging(value);
                ReportPropertyChanging("CustomerLastName");
                _CustomerLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerLastName");
                OnCustomerLastNameChanged();
            }
        }
        private global::System.String _CustomerLastName;
        partial void OnCustomerLastNameChanging(global::System.String value);
        partial void OnCustomerLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerEmail
        {
            get
            {
                return _CustomerEmail;
            }
            set
            {
                OnCustomerEmailChanging(value);
                ReportPropertyChanging("CustomerEmail");
                _CustomerEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerEmail");
                OnCustomerEmailChanged();
            }
        }
        private global::System.String _CustomerEmail;
        partial void OnCustomerEmailChanging(global::System.String value);
        partial void OnCustomerEmailChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="GetEmployees_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetEmployees_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetEmployees_Result object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="username">Initial value of the Username property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static GetEmployees_Result CreateGetEmployees_Result(global::System.Guid userId, global::System.String username, global::System.DateTime lastActivityDate)
        {
            GetEmployees_Result getEmployees_Result = new GetEmployees_Result();
            getEmployees_Result.UserId = userId;
            getEmployees_Result.Username = username;
            getEmployees_Result.LastActivityDate = lastActivityDate;
            return getEmployees_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Username
        {
            get
            {
                return _Username;
            }
            set
            {
                OnUsernameChanging(value);
                ReportPropertyChanging("Username");
                _Username = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Username");
                OnUsernameChanged();
            }
        }
        private global::System.String _Username;
        partial void OnUsernameChanging(global::System.String value);
        partial void OnUsernameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="GetOutstandingInvoices_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetOutstandingInvoices_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetOutstandingInvoices_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        public static GetOutstandingInvoices_Result CreateGetOutstandingInvoices_Result(global::System.String name, global::System.Int32 jobID, global::System.String deliveryOrPickup)
        {
            GetOutstandingInvoices_Result getOutstandingInvoices_Result = new GetOutstandingInvoices_Result();
            getOutstandingInvoices_Result.Name = name;
            getOutstandingInvoices_Result.JobID = jobID;
            getOutstandingInvoices_Result.DeliveryOrPickup = deliveryOrPickup;
            return getOutstandingInvoices_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoicedDate
        {
            get
            {
                return _InvoicedDate;
            }
            set
            {
                OnInvoicedDateChanging(value);
                ReportPropertyChanging("InvoicedDate");
                _InvoicedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicedDate");
                OnInvoicedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoicedDate;
        partial void OnInvoicedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoicedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                OnCustomerChanging(value);
                ReportPropertyChanging("Customer");
                _Customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer");
                OnCustomerChanged();
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Days_Past_Due
        {
            get
            {
                return _Days_Past_Due;
            }
            set
            {
                OnDays_Past_DueChanging(value);
                ReportPropertyChanging("Days_Past_Due");
                _Days_Past_Due = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Days_Past_Due");
                OnDays_Past_DueChanged();
            }
        }
        private Nullable<global::System.Int32> _Days_Past_Due;
        partial void OnDays_Past_DueChanging(Nullable<global::System.Int32> value);
        partial void OnDays_Past_DueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Last_Messaged_On
        {
            get
            {
                return _Last_Messaged_On;
            }
            set
            {
                OnLast_Messaged_OnChanging(value);
                ReportPropertyChanging("Last_Messaged_On");
                _Last_Messaged_On = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Last_Messaged_On");
                OnLast_Messaged_OnChanged();
            }
        }
        private Nullable<global::System.DateTime> _Last_Messaged_On;
        partial void OnLast_Messaged_OnChanging(Nullable<global::System.DateTime> value);
        partial void OnLast_Messaged_OnChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="GetOutstandingInvoicesByCustomer_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class GetOutstandingInvoicesByCustomer_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new GetOutstandingInvoicesByCustomer_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        public static GetOutstandingInvoicesByCustomer_Result CreateGetOutstandingInvoicesByCustomer_Result(global::System.String name, global::System.Int32 jobID, global::System.String deliveryOrPickup)
        {
            GetOutstandingInvoicesByCustomer_Result getOutstandingInvoicesByCustomer_Result = new GetOutstandingInvoicesByCustomer_Result();
            getOutstandingInvoicesByCustomer_Result.Name = name;
            getOutstandingInvoicesByCustomer_Result.JobID = jobID;
            getOutstandingInvoicesByCustomer_Result.DeliveryOrPickup = deliveryOrPickup;
            return getOutstandingInvoicesByCustomer_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                OnCustomerChanging(value);
                ReportPropertyChanging("Customer");
                _Customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer");
                OnCustomerChanged();
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoicedDate
        {
            get
            {
                return _InvoicedDate;
            }
            set
            {
                OnInvoicedDateChanging(value);
                ReportPropertyChanging("InvoicedDate");
                _InvoicedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicedDate");
                OnInvoicedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoicedDate;
        partial void OnInvoicedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoicedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Days_Past_Due
        {
            get
            {
                return _Days_Past_Due;
            }
            set
            {
                OnDays_Past_DueChanging(value);
                ReportPropertyChanging("Days_Past_Due");
                _Days_Past_Due = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Days_Past_Due");
                OnDays_Past_DueChanged();
            }
        }
        private Nullable<global::System.Int32> _Days_Past_Due;
        partial void OnDays_Past_DueChanging(Nullable<global::System.Int32> value);
        partial void OnDays_Past_DueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Last_Messaged_On
        {
            get
            {
                return _Last_Messaged_On;
            }
            set
            {
                OnLast_Messaged_OnChanging(value);
                ReportPropertyChanging("Last_Messaged_On");
                _Last_Messaged_On = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Last_Messaged_On");
                OnLast_Messaged_OnChanged();
            }
        }
        private Nullable<global::System.DateTime> _Last_Messaged_On;
        partial void OnLast_Messaged_OnChanging(Nullable<global::System.DateTime> value);
        partial void OnLast_Messaged_OnChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="Job_GetOutstandingInvoices_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Job_GetOutstandingInvoices_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job_GetOutstandingInvoices_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        public static Job_GetOutstandingInvoices_Result CreateJob_GetOutstandingInvoices_Result(global::System.String name, global::System.Int32 jobID, global::System.String deliveryOrPickup)
        {
            Job_GetOutstandingInvoices_Result job_GetOutstandingInvoices_Result = new Job_GetOutstandingInvoices_Result();
            job_GetOutstandingInvoices_Result.Name = name;
            job_GetOutstandingInvoices_Result.JobID = jobID;
            job_GetOutstandingInvoices_Result.DeliveryOrPickup = deliveryOrPickup;
            return job_GetOutstandingInvoices_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                OnCustomerChanging(value);
                ReportPropertyChanging("Customer");
                _Customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer");
                OnCustomerChanged();
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoicedDate
        {
            get
            {
                return _InvoicedDate;
            }
            set
            {
                OnInvoicedDateChanging(value);
                ReportPropertyChanging("InvoicedDate");
                _InvoicedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicedDate");
                OnInvoicedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoicedDate;
        partial void OnInvoicedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoicedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Days_Past_Due
        {
            get
            {
                return _Days_Past_Due;
            }
            set
            {
                OnDays_Past_DueChanging(value);
                ReportPropertyChanging("Days_Past_Due");
                _Days_Past_Due = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Days_Past_Due");
                OnDays_Past_DueChanged();
            }
        }
        private Nullable<global::System.Int32> _Days_Past_Due;
        partial void OnDays_Past_DueChanging(Nullable<global::System.Int32> value);
        partial void OnDays_Past_DueChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> Last_Messaged_On
        {
            get
            {
                return _Last_Messaged_On;
            }
            set
            {
                OnLast_Messaged_OnChanging(value);
                ReportPropertyChanging("Last_Messaged_On");
                _Last_Messaged_On = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Last_Messaged_On");
                OnLast_Messaged_OnChanged();
            }
        }
        private Nullable<global::System.DateTime> _Last_Messaged_On;
        partial void OnLast_Messaged_OnChanging(Nullable<global::System.DateTime> value);
        partial void OnLast_Messaged_OnChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="Job_GetOutstandingInvoices_Result1")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class Job_GetOutstandingInvoices_Result1 : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Job_GetOutstandingInvoices_Result1 object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        public static Job_GetOutstandingInvoices_Result1 CreateJob_GetOutstandingInvoices_Result1(global::System.String name, global::System.Int32 jobID, global::System.String deliveryOrPickup)
        {
            Job_GetOutstandingInvoices_Result1 job_GetOutstandingInvoices_Result1 = new Job_GetOutstandingInvoices_Result1();
            job_GetOutstandingInvoices_Result1.Name = name;
            job_GetOutstandingInvoices_Result1.JobID = jobID;
            job_GetOutstandingInvoices_Result1.DeliveryOrPickup = deliveryOrPickup;
            return job_GetOutstandingInvoices_Result1;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                OnCustomerChanging(value);
                ReportPropertyChanging("Customer");
                _Customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer");
                OnCustomerChanged();
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoicedDate
        {
            get
            {
                return _InvoicedDate;
            }
            set
            {
                OnInvoicedDateChanging(value);
                ReportPropertyChanging("InvoicedDate");
                _InvoicedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicedDate");
                OnInvoicedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoicedDate;
        partial void OnInvoicedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoicedDateChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobControl_Get_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class JobControl_Get_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobControl_Get_Result object.
        /// </summary>
        /// <param name="jobControlID">Initial value of the JobControlID property.</param>
        /// <param name="controlName">Initial value of the ControlName property.</param>
        /// <param name="controlTypeName">Initial value of the ControlTypeName property.</param>
        public static JobControl_Get_Result CreateJobControl_Get_Result(global::System.Int32 jobControlID, global::System.String controlName, global::System.String controlTypeName)
        {
            JobControl_Get_Result jobControl_Get_Result = new JobControl_Get_Result();
            jobControl_Get_Result.JobControlID = jobControlID;
            jobControl_Get_Result.ControlName = controlName;
            jobControl_Get_Result.ControlTypeName = controlTypeName;
            return jobControl_Get_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobControlID
        {
            get
            {
                return _JobControlID;
            }
            set
            {
                OnJobControlIDChanging(value);
                ReportPropertyChanging("JobControlID");
                _JobControlID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobControlID");
                OnJobControlIDChanged();
            }
        }
        private global::System.Int32 _JobControlID;
        partial void OnJobControlIDChanging(global::System.Int32 value);
        partial void OnJobControlIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ControlName
        {
            get
            {
                return _ControlName;
            }
            set
            {
                OnControlNameChanging(value);
                ReportPropertyChanging("ControlName");
                _ControlName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ControlName");
                OnControlNameChanged();
            }
        }
        private global::System.String _ControlName;
        partial void OnControlNameChanging(global::System.String value);
        partial void OnControlNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ControlTypeName
        {
            get
            {
                return _ControlTypeName;
            }
            set
            {
                OnControlTypeNameChanging(value);
                ReportPropertyChanging("ControlTypeName");
                _ControlTypeName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("ControlTypeName");
                OnControlTypeNameChanged();
            }
        }
        private global::System.String _ControlTypeName;
        partial void OnControlTypeNameChanging(global::System.String value);
        partial void OnControlTypeNameChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobDetailsByJobID_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class JobDetailsByJobID_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobDetailsByJobID_Result object.
        /// </summary>
        /// <param name="jobName">Initial value of the JobName property.</param>
        public static JobDetailsByJobID_Result CreateJobDetailsByJobID_Result(global::System.String jobName)
        {
            JobDetailsByJobID_Result jobDetailsByJobID_Result = new JobDetailsByJobID_Result();
            jobDetailsByJobID_Result.JobName = jobName;
            return jobDetailsByJobID_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private Nullable<global::System.Int32> _JobID;
        partial void OnJobIDChanging(Nullable<global::System.Int32> value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private global::System.String _JobName;
        partial void OnJobNameChanging(global::System.String value);
        partial void OnJobNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobStatus
        {
            get
            {
                return _JobStatus;
            }
            set
            {
                OnJobStatusChanging(value);
                ReportPropertyChanging("JobStatus");
                _JobStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobStatus");
                OnJobStatusChanged();
            }
        }
        private global::System.String _JobStatus;
        partial void OnJobStatusChanging(global::System.String value);
        partial void OnJobStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Guid> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerFirstName
        {
            get
            {
                return _CustomerFirstName;
            }
            set
            {
                OnCustomerFirstNameChanging(value);
                ReportPropertyChanging("CustomerFirstName");
                _CustomerFirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerFirstName");
                OnCustomerFirstNameChanged();
            }
        }
        private global::System.String _CustomerFirstName;
        partial void OnCustomerFirstNameChanging(global::System.String value);
        partial void OnCustomerFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerLastName
        {
            get
            {
                return _CustomerLastName;
            }
            set
            {
                OnCustomerLastNameChanging(value);
                ReportPropertyChanging("CustomerLastName");
                _CustomerLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerLastName");
                OnCustomerLastNameChanged();
            }
        }
        private global::System.String _CustomerLastName;
        partial void OnCustomerLastNameChanging(global::System.String value);
        partial void OnCustomerLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialInstructions
        {
            get
            {
                return _SpecialInstructions;
            }
            set
            {
                OnSpecialInstructionsChanging(value);
                ReportPropertyChanging("SpecialInstructions");
                _SpecialInstructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecialInstructions");
                OnSpecialInstructionsChanged();
            }
        }
        private global::System.String _SpecialInstructions;
        partial void OnSpecialInstructionsChanging(global::System.String value);
        partial void OnSpecialInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerEmail
        {
            get
            {
                return _CustomerEmail;
            }
            set
            {
                OnCustomerEmailChanging(value);
                ReportPropertyChanging("CustomerEmail");
                _CustomerEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerEmail");
                OnCustomerEmailChanged();
            }
        }
        private global::System.String _CustomerEmail;
        partial void OnCustomerEmailChanging(global::System.String value);
        partial void OnCustomerEmailChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobsByCustomer_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class JobsByCustomer_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobsByCustomer_Result object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        /// <param name="customerID">Initial value of the CustomerID property.</param>
        public static JobsByCustomer_Result CreateJobsByCustomer_Result(global::System.Int32 jobID, global::System.String name, global::System.Int32 quantity, global::System.String deliveryOrPickup, global::System.Guid customerID)
        {
            JobsByCustomer_Result jobsByCustomer_Result = new JobsByCustomer_Result();
            jobsByCustomer_Result.JobID = jobID;
            jobsByCustomer_Result.Name = name;
            jobsByCustomer_Result.Quantity = quantity;
            jobsByCustomer_Result.DeliveryOrPickup = deliveryOrPickup;
            jobsByCustomer_Result.CustomerID = customerID;
            return jobsByCustomer_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialInstructions
        {
            get
            {
                return _SpecialInstructions;
            }
            set
            {
                OnSpecialInstructionsChanging(value);
                ReportPropertyChanging("SpecialInstructions");
                _SpecialInstructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecialInstructions");
                OnSpecialInstructionsChanged();
            }
        }
        private global::System.String _SpecialInstructions;
        partial void OnSpecialInstructionsChanging(global::System.String value);
        partial void OnSpecialInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private global::System.Guid _CustomerID;
        partial void OnCustomerIDChanging(global::System.Guid value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> InvoicedDate
        {
            get
            {
                return _InvoicedDate;
            }
            set
            {
                OnInvoicedDateChanging(value);
                ReportPropertyChanging("InvoicedDate");
                _InvoicedDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("InvoicedDate");
                OnInvoicedDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _InvoicedDate;
        partial void OnInvoicedDateChanging(Nullable<global::System.DateTime> value);
        partial void OnInvoicedDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Paid
        {
            get
            {
                return _Paid;
            }
            set
            {
                OnPaidChanging(value);
                ReportPropertyChanging("Paid");
                _Paid = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Paid");
                OnPaidChanged();
            }
        }
        private global::System.String _Paid;
        partial void OnPaidChanging(global::System.String value);
        partial void OnPaidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Decimal> QuoteAmount
        {
            get
            {
                return _QuoteAmount;
            }
            set
            {
                OnQuoteAmountChanging(value);
                ReportPropertyChanging("QuoteAmount");
                _QuoteAmount = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("QuoteAmount");
                OnQuoteAmountChanged();
            }
        }
        private Nullable<global::System.Decimal> _QuoteAmount;
        partial void OnQuoteAmountChanging(Nullable<global::System.Decimal> value);
        partial void OnQuoteAmountChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobsByJobStatusID_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class JobsByJobStatusID_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobsByJobStatusID_Result object.
        /// </summary>
        /// <param name="jobName">Initial value of the JobName property.</param>
        public static JobsByJobStatusID_Result CreateJobsByJobStatusID_Result(global::System.String jobName)
        {
            JobsByJobStatusID_Result jobsByJobStatusID_Result = new JobsByJobStatusID_Result();
            jobsByJobStatusID_Result.JobName = jobName;
            return jobsByJobStatusID_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private Nullable<global::System.Int32> _JobID;
        partial void OnJobIDChanging(Nullable<global::System.Int32> value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private global::System.String _JobName;
        partial void OnJobNameChanging(global::System.String value);
        partial void OnJobNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobStatus
        {
            get
            {
                return _JobStatus;
            }
            set
            {
                OnJobStatusChanging(value);
                ReportPropertyChanging("JobStatus");
                _JobStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobStatus");
                OnJobStatusChanged();
            }
        }
        private global::System.String _JobStatus;
        partial void OnJobStatusChanging(global::System.String value);
        partial void OnJobStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Guid> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerFirstName
        {
            get
            {
                return _CustomerFirstName;
            }
            set
            {
                OnCustomerFirstNameChanging(value);
                ReportPropertyChanging("CustomerFirstName");
                _CustomerFirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerFirstName");
                OnCustomerFirstNameChanged();
            }
        }
        private global::System.String _CustomerFirstName;
        partial void OnCustomerFirstNameChanging(global::System.String value);
        partial void OnCustomerFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerLastName
        {
            get
            {
                return _CustomerLastName;
            }
            set
            {
                OnCustomerLastNameChanging(value);
                ReportPropertyChanging("CustomerLastName");
                _CustomerLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerLastName");
                OnCustomerLastNameChanged();
            }
        }
        private global::System.String _CustomerLastName;
        partial void OnCustomerLastNameChanging(global::System.String value);
        partial void OnCustomerLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerEmail
        {
            get
            {
                return _CustomerEmail;
            }
            set
            {
                OnCustomerEmailChanging(value);
                ReportPropertyChanging("CustomerEmail");
                _CustomerEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerEmail");
                OnCustomerEmailChanged();
            }
        }
        private global::System.String _CustomerEmail;
        partial void OnCustomerEmailChanging(global::System.String value);
        partial void OnCustomerEmailChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobsByJobStatusIDCustomerID_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class JobsByJobStatusIDCustomerID_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobsByJobStatusIDCustomerID_Result object.
        /// </summary>
        /// <param name="jobName">Initial value of the JobName property.</param>
        public static JobsByJobStatusIDCustomerID_Result CreateJobsByJobStatusIDCustomerID_Result(global::System.String jobName)
        {
            JobsByJobStatusIDCustomerID_Result jobsByJobStatusIDCustomerID_Result = new JobsByJobStatusIDCustomerID_Result();
            jobsByJobStatusIDCustomerID_Result.JobName = jobName;
            return jobsByJobStatusIDCustomerID_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private Nullable<global::System.Int32> _JobID;
        partial void OnJobIDChanging(Nullable<global::System.Int32> value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String JobName
        {
            get
            {
                return _JobName;
            }
            set
            {
                OnJobNameChanging(value);
                ReportPropertyChanging("JobName");
                _JobName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("JobName");
                OnJobNameChanged();
            }
        }
        private global::System.String _JobName;
        partial void OnJobNameChanging(global::System.String value);
        partial void OnJobNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String JobStatus
        {
            get
            {
                return _JobStatus;
            }
            set
            {
                OnJobStatusChanging(value);
                ReportPropertyChanging("JobStatus");
                _JobStatus = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("JobStatus");
                OnJobStatusChanged();
            }
        }
        private global::System.String _JobStatus;
        partial void OnJobStatusChanging(global::System.String value);
        partial void OnJobStatusChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CompanyID
        {
            get
            {
                return _CompanyID;
            }
            set
            {
                OnCompanyIDChanging(value);
                ReportPropertyChanging("CompanyID");
                _CompanyID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompanyID");
                OnCompanyIDChanged();
            }
        }
        private Nullable<global::System.Int32> _CompanyID;
        partial void OnCompanyIDChanging(Nullable<global::System.Int32> value);
        partial void OnCompanyIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompanyName
        {
            get
            {
                return _CompanyName;
            }
            set
            {
                OnCompanyNameChanging(value);
                ReportPropertyChanging("CompanyName");
                _CompanyName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CompanyName");
                OnCompanyNameChanged();
            }
        }
        private global::System.String _CompanyName;
        partial void OnCompanyNameChanging(global::System.String value);
        partial void OnCompanyNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Guid> CustomerID
        {
            get
            {
                return _CustomerID;
            }
            set
            {
                OnCustomerIDChanging(value);
                ReportPropertyChanging("CustomerID");
                _CustomerID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CustomerID");
                OnCustomerIDChanged();
            }
        }
        private Nullable<global::System.Guid> _CustomerID;
        partial void OnCustomerIDChanging(Nullable<global::System.Guid> value);
        partial void OnCustomerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerFirstName
        {
            get
            {
                return _CustomerFirstName;
            }
            set
            {
                OnCustomerFirstNameChanging(value);
                ReportPropertyChanging("CustomerFirstName");
                _CustomerFirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerFirstName");
                OnCustomerFirstNameChanged();
            }
        }
        private global::System.String _CustomerFirstName;
        partial void OnCustomerFirstNameChanging(global::System.String value);
        partial void OnCustomerFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerLastName
        {
            get
            {
                return _CustomerLastName;
            }
            set
            {
                OnCustomerLastNameChanging(value);
                ReportPropertyChanging("CustomerLastName");
                _CustomerLastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerLastName");
                OnCustomerLastNameChanged();
            }
        }
        private global::System.String _CustomerLastName;
        partial void OnCustomerLastNameChanging(global::System.String value);
        partial void OnCustomerLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private Nullable<global::System.Int32> _Quantity;
        partial void OnQuantityChanging(Nullable<global::System.Int32> value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerEmail
        {
            get
            {
                return _CustomerEmail;
            }
            set
            {
                OnCustomerEmailChanging(value);
                ReportPropertyChanging("CustomerEmail");
                _CustomerEmail = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerEmail");
                OnCustomerEmailChanged();
            }
        }
        private global::System.String _CustomerEmail;
        partial void OnCustomerEmailChanging(global::System.String value);
        partial void OnCustomerEmailChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="JobStatusesByJobID_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class JobStatusesByJobID_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new JobStatusesByJobID_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static JobStatusesByJobID_Result CreateJobStatusesByJobID_Result(global::System.String name)
        {
            JobStatusesByJobID_Result jobStatusesByJobID_Result = new JobStatusesByJobID_Result();
            jobStatusesByJobID_Result.Name = name;
            return jobStatusesByJobID_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangedOn
        {
            get
            {
                return _ChangedOn;
            }
            set
            {
                OnChangedOnChanging(value);
                ReportPropertyChanging("ChangedOn");
                _ChangedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangedOn");
                OnChangedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangedOn;
        partial void OnChangedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnChangedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedOn
        {
            get
            {
                return _CompletedOn;
            }
            set
            {
                OnCompletedOnChanging(value);
                ReportPropertyChanging("CompletedOn");
                _CompletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedOn");
                OnCompletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedOn;
        partial void OnCompletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="ListAllUsers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListAllUsers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListAllUsers_Result object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        /// <param name="isApproved">Initial value of the IsApproved property.</param>
        public static ListAllUsers_Result CreateListAllUsers_Result(global::System.Guid userId, global::System.String userName, global::System.String roleName, global::System.Boolean isApproved)
        {
            ListAllUsers_Result listAllUsers_Result = new ListAllUsers_Result();
            listAllUsers_Result.UserId = userId;
            listAllUsers_Result.UserName = userName;
            listAllUsers_Result.RoleName = roleName;
            listAllUsers_Result.IsApproved = isApproved;
            return listAllUsers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Boolean IsApproved
        {
            get
            {
                return _IsApproved;
            }
            set
            {
                OnIsApprovedChanging(value);
                ReportPropertyChanging("IsApproved");
                _IsApproved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsApproved");
                OnIsApprovedChanged();
            }
        }
        private global::System.Boolean _IsApproved;
        partial void OnIsApprovedChanging(global::System.Boolean value);
        partial void OnIsApprovedChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="ListByJobStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListByJobStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListByJobStatus_Result object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        public static ListByJobStatus_Result CreateListByJobStatus_Result(global::System.Int32 jobID, global::System.String name, global::System.Int32 quantity, global::System.String deliveryOrPickup, global::System.Int32 jobStatusID)
        {
            ListByJobStatus_Result listByJobStatus_Result = new ListByJobStatus_Result();
            listByJobStatus_Result.JobID = jobID;
            listByJobStatus_Result.Name = name;
            listByJobStatus_Result.Quantity = quantity;
            listByJobStatus_Result.DeliveryOrPickup = deliveryOrPickup;
            listByJobStatus_Result.JobStatusID = jobStatusID;
            return listByJobStatus_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialInstructions
        {
            get
            {
                return _SpecialInstructions;
            }
            set
            {
                OnSpecialInstructionsChanging(value);
                ReportPropertyChanging("SpecialInstructions");
                _SpecialInstructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecialInstructions");
                OnSpecialInstructionsChanged();
            }
        }
        private global::System.String _SpecialInstructions;
        partial void OnSpecialInstructionsChanging(global::System.String value);
        partial void OnSpecialInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                OnCustomerChanging(value);
                ReportPropertyChanging("Customer");
                _Customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer");
                OnCustomerChanged();
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                OnJobStatusIDChanging(value);
                ReportPropertyChanging("JobStatusID");
                _JobStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobStatusID");
                OnJobStatusIDChanged();
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="ListCustomers_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListCustomers_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListCustomers_Result object.
        /// </summary>
        /// <param name="userId">Initial value of the UserId property.</param>
        /// <param name="userName">Initial value of the UserName property.</param>
        /// <param name="lastActivityDate">Initial value of the LastActivityDate property.</param>
        public static ListCustomers_Result CreateListCustomers_Result(global::System.Guid userId, global::System.String userName, global::System.DateTime lastActivityDate)
        {
            ListCustomers_Result listCustomers_Result = new ListCustomers_Result();
            listCustomers_Result.UserId = userId;
            listCustomers_Result.UserName = userName;
            listCustomers_Result.LastActivityDate = lastActivityDate;
            return listCustomers_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid UserId
        {
            get
            {
                return _UserId;
            }
            set
            {
                OnUserIdChanging(value);
                ReportPropertyChanging("UserId");
                _UserId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("UserId");
                OnUserIdChanged();
            }
        }
        private global::System.Guid _UserId;
        partial void OnUserIdChanging(global::System.Guid value);
        partial void OnUserIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UserName
        {
            get
            {
                return _UserName;
            }
            set
            {
                OnUserNameChanging(value);
                ReportPropertyChanging("UserName");
                _UserName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UserName");
                OnUserNameChanged();
            }
        }
        private global::System.String _UserName;
        partial void OnUserNameChanging(global::System.String value);
        partial void OnUserNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CustomerAddress
        {
            get
            {
                return _CustomerAddress;
            }
            set
            {
                OnCustomerAddressChanging(value);
                ReportPropertyChanging("CustomerAddress");
                _CustomerAddress = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CustomerAddress");
                OnCustomerAddressChanged();
            }
        }
        private global::System.String _CustomerAddress;
        partial void OnCustomerAddressChanging(global::System.String value);
        partial void OnCustomerAddressChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String City
        {
            get
            {
                return _City;
            }
            set
            {
                OnCityChanging(value);
                ReportPropertyChanging("City");
                _City = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("City");
                OnCityChanged();
            }
        }
        private global::System.String _City;
        partial void OnCityChanging(global::System.String value);
        partial void OnCityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Province
        {
            get
            {
                return _Province;
            }
            set
            {
                OnProvinceChanging(value);
                ReportPropertyChanging("Province");
                _Province = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Province");
                OnProvinceChanged();
            }
        }
        private global::System.String _Province;
        partial void OnProvinceChanging(global::System.String value);
        partial void OnProvinceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PostalCode
        {
            get
            {
                return _PostalCode;
            }
            set
            {
                OnPostalCodeChanging(value);
                ReportPropertyChanging("PostalCode");
                _PostalCode = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PostalCode");
                OnPostalCodeChanged();
            }
        }
        private global::System.String _PostalCode;
        partial void OnPostalCodeChanging(global::System.String value);
        partial void OnPostalCodeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String PhoneNumber
        {
            get
            {
                return _PhoneNumber;
            }
            set
            {
                OnPhoneNumberChanging(value);
                ReportPropertyChanging("PhoneNumber");
                _PhoneNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("PhoneNumber");
                OnPhoneNumberChanged();
            }
        }
        private global::System.String _PhoneNumber;
        partial void OnPhoneNumberChanging(global::System.String value);
        partial void OnPhoneNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> Approved
        {
            get
            {
                return _Approved;
            }
            set
            {
                OnApprovedChanging(value);
                ReportPropertyChanging("Approved");
                _Approved = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Approved");
                OnApprovedChanged();
            }
        }
        private Nullable<global::System.Boolean> _Approved;
        partial void OnApprovedChanging(Nullable<global::System.Boolean> value);
        partial void OnApprovedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime LastActivityDate
        {
            get
            {
                return _LastActivityDate;
            }
            set
            {
                OnLastActivityDateChanging(value);
                ReportPropertyChanging("LastActivityDate");
                _LastActivityDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("LastActivityDate");
                OnLastActivityDateChanged();
            }
        }
        private global::System.DateTime _LastActivityDate;
        partial void OnLastActivityDateChanging(global::System.DateTime value);
        partial void OnLastActivityDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Email
        {
            get
            {
                return _Email;
            }
            set
            {
                OnEmailChanging(value);
                ReportPropertyChanging("Email");
                _Email = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Email");
                OnEmailChanged();
            }
        }
        private global::System.String _Email;
        partial void OnEmailChanging(global::System.String value);
        partial void OnEmailChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Boolean> IsAdmin
        {
            get
            {
                return _IsAdmin;
            }
            set
            {
                OnIsAdminChanging(value);
                ReportPropertyChanging("IsAdmin");
                _IsAdmin = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("IsAdmin");
                OnIsAdminChanged();
            }
        }
        private Nullable<global::System.Boolean> _IsAdmin;
        partial void OnIsAdminChanging(Nullable<global::System.Boolean> value);
        partial void OnIsAdminChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="ListJobByStatus_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListJobByStatus_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListJobByStatus_Result object.
        /// </summary>
        /// <param name="jobID">Initial value of the JobID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="quantity">Initial value of the Quantity property.</param>
        /// <param name="deliveryOrPickup">Initial value of the DeliveryOrPickup property.</param>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        public static ListJobByStatus_Result CreateListJobByStatus_Result(global::System.Int32 jobID, global::System.String name, global::System.Int32 quantity, global::System.String deliveryOrPickup, global::System.Int32 jobStatusID)
        {
            ListJobByStatus_Result listJobByStatus_Result = new ListJobByStatus_Result();
            listJobByStatus_Result.JobID = jobID;
            listJobByStatus_Result.Name = name;
            listJobByStatus_Result.Quantity = quantity;
            listJobByStatus_Result.DeliveryOrPickup = deliveryOrPickup;
            listJobByStatus_Result.JobStatusID = jobStatusID;
            return listJobByStatus_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobID
        {
            get
            {
                return _JobID;
            }
            set
            {
                OnJobIDChanging(value);
                ReportPropertyChanging("JobID");
                _JobID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobID");
                OnJobIDChanged();
            }
        }
        private global::System.Int32 _JobID;
        partial void OnJobIDChanging(global::System.Int32 value);
        partial void OnJobIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String SpecialInstructions
        {
            get
            {
                return _SpecialInstructions;
            }
            set
            {
                OnSpecialInstructionsChanging(value);
                ReportPropertyChanging("SpecialInstructions");
                _SpecialInstructions = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("SpecialInstructions");
                OnSpecialInstructionsChanged();
            }
        }
        private global::System.String _SpecialInstructions;
        partial void OnSpecialInstructionsChanging(global::System.String value);
        partial void OnSpecialInstructionsChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quantity
        {
            get
            {
                return _Quantity;
            }
            set
            {
                OnQuantityChanging(value);
                ReportPropertyChanging("Quantity");
                _Quantity = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quantity");
                OnQuantityChanged();
            }
        }
        private global::System.Int32 _Quantity;
        partial void OnQuantityChanging(global::System.Int32 value);
        partial void OnQuantityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String DeliveryOrPickup
        {
            get
            {
                return _DeliveryOrPickup;
            }
            set
            {
                OnDeliveryOrPickupChanging(value);
                ReportPropertyChanging("DeliveryOrPickup");
                _DeliveryOrPickup = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("DeliveryOrPickup");
                OnDeliveryOrPickupChanged();
            }
        }
        private global::System.String _DeliveryOrPickup;
        partial void OnDeliveryOrPickupChanging(global::System.String value);
        partial void OnDeliveryOrPickupChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Customer
        {
            get
            {
                return _Customer;
            }
            set
            {
                OnCustomerChanging(value);
                ReportPropertyChanging("Customer");
                _Customer = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Customer");
                OnCustomerChanged();
            }
        }
        private global::System.String _Customer;
        partial void OnCustomerChanging(global::System.String value);
        partial void OnCustomerChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> PromiseDate
        {
            get
            {
                return _PromiseDate;
            }
            set
            {
                OnPromiseDateChanging(value);
                ReportPropertyChanging("PromiseDate");
                _PromiseDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("PromiseDate");
                OnPromiseDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _PromiseDate;
        partial void OnPromiseDateChanging(Nullable<global::System.DateTime> value);
        partial void OnPromiseDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> StartDate
        {
            get
            {
                return _StartDate;
            }
            set
            {
                OnStartDateChanging(value);
                ReportPropertyChanging("StartDate");
                _StartDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("StartDate");
                OnStartDateChanged();
            }
        }
        private Nullable<global::System.DateTime> _StartDate;
        partial void OnStartDateChanging(Nullable<global::System.DateTime> value);
        partial void OnStartDateChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                OnJobStatusIDChanging(value);
                ReportPropertyChanging("JobStatusID");
                _JobStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobStatusID");
                OnJobStatusIDChanged();
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="ListJobStatusesByJobID_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListJobStatusesByJobID_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListJobStatusesByJobID_Result object.
        /// </summary>
        /// <param name="name">Initial value of the Name property.</param>
        public static ListJobStatusesByJobID_Result CreateListJobStatusesByJobID_Result(global::System.String name)
        {
            ListJobStatusesByJobID_Result listJobStatusesByJobID_Result = new ListJobStatusesByJobID_Result();
            listJobStatusesByJobID_Result.Name = name;
            return listJobStatusesByJobID_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> ChangedOn
        {
            get
            {
                return _ChangedOn;
            }
            set
            {
                OnChangedOnChanging(value);
                ReportPropertyChanging("ChangedOn");
                _ChangedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ChangedOn");
                OnChangedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _ChangedOn;
        partial void OnChangedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnChangedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> CompletedOn
        {
            get
            {
                return _CompletedOn;
            }
            set
            {
                OnCompletedOnChanging(value);
                ReportPropertyChanging("CompletedOn");
                _CompletedOn = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CompletedOn");
                OnCompletedOnChanged();
            }
        }
        private Nullable<global::System.DateTime> _CompletedOn;
        partial void OnCompletedOnChanging(Nullable<global::System.DateTime> value);
        partial void OnCompletedOnChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String User
        {
            get
            {
                return _User;
            }
            set
            {
                OnUserChanging(value);
                ReportPropertyChanging("User");
                _User = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("User");
                OnUserChanged();
            }
        }
        private global::System.String _User;
        partial void OnUserChanging(global::System.String value);
        partial void OnUserChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmComplexTypeAttribute(NamespaceName="BrentwoodPrintingDBModel", Name="ListJobStatusWithStatusName_Result")]
    [DataContractAttribute(IsReference=true)]
    [Serializable()]
    public partial class ListJobStatusWithStatusName_Result : ComplexObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new ListJobStatusWithStatusName_Result object.
        /// </summary>
        /// <param name="jobStatusID">Initial value of the JobStatusID property.</param>
        /// <param name="name">Initial value of the Name property.</param>
        /// <param name="roleName">Initial value of the RoleName property.</param>
        public static ListJobStatusWithStatusName_Result CreateListJobStatusWithStatusName_Result(global::System.Int32 jobStatusID, global::System.String name, global::System.String roleName)
        {
            ListJobStatusWithStatusName_Result listJobStatusWithStatusName_Result = new ListJobStatusWithStatusName_Result();
            listJobStatusWithStatusName_Result.JobStatusID = jobStatusID;
            listJobStatusWithStatusName_Result.Name = name;
            listJobStatusWithStatusName_Result.RoleName = roleName;
            return listJobStatusWithStatusName_Result;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 JobStatusID
        {
            get
            {
                return _JobStatusID;
            }
            set
            {
                OnJobStatusIDChanging(value);
                ReportPropertyChanging("JobStatusID");
                _JobStatusID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("JobStatusID");
                OnJobStatusIDChanged();
            }
        }
        private global::System.Int32 _JobStatusID;
        partial void OnJobStatusIDChanging(global::System.Int32 value);
        partial void OnJobStatusIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Archived
        {
            get
            {
                return _Archived;
            }
            set
            {
                OnArchivedChanging(value);
                ReportPropertyChanging("Archived");
                _Archived = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Archived");
                OnArchivedChanged();
            }
        }
        private global::System.String _Archived;
        partial void OnArchivedChanging(global::System.String value);
        partial void OnArchivedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String RoleName
        {
            get
            {
                return _RoleName;
            }
            set
            {
                OnRoleNameChanging(value);
                ReportPropertyChanging("RoleName");
                _RoleName = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("RoleName");
                OnRoleNameChanged();
            }
        }
        private global::System.String _RoleName;
        partial void OnRoleNameChanging(global::System.String value);
        partial void OnRoleNameChanged();

        #endregion

    }

    #endregion

    
}
